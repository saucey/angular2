/* Force the charset
================================================== */
/* Bower Components
================================================== */
/* Compass Mixins */
/*
 * A partial implementation of the Ruby list functions from Compass:
 * https://github.com/Compass/compass/blob/stable/lib/compass/sass_extensions/functions/lists.rb
 */
/*
 * A partial implementation of the Ruby constants functions from Compass:
 * https://github.com/Compass/compass/blob/stable/lib/compass/sass_extensions/functions/constants.rb
 */
/*
 * A partial implementation of the Ruby display functions from Compass:
 * https://github.com/Compass/compass/blob/stable/core/lib/compass/core/sass_extensions/functions/display.rb
 */
/* Breakpoint SASS */
/* Groups of mijnaegon files
================================================== */
/* SASS variables, functions, mixins, class and placeholders helpers */
/**
 * BREAKPOINTS for AEGON.nl current website.
 * Approach: Mobile First Method
 */
/**
 * Mobile
 *
 * Example: @include breakpoint($brk-mobile) {}
 *
 * IMPORTANT: try to avoid the breakpoint below, since the theme is already
 * mobile first and everything need to be written mobile as default.
 */
/**
 * Generic Tablet and upper
 *
 * Example: @include breakpoint($brk-tablet) {}
 */
/**
 * iPad portrait and upper
 *
 * Example: @include breakpoint($brk-ipad-portrait) {}
 */
/**
 * iPad landscape and upper
 *
 * Example: @include breakpoint($brk-ipad-landscape) {}
 */
/**
 * Large desktop and upper
 *
 * Example: @include breakpoint($brk-large-desktop) {}
 */
/**
 * Device Pixel Ratio of at least 1.5 and upper
 *
 * Example: @include breakpoint($brk-hidpi) {}
 */
/**
 * Media print
 *
 * Example: @include breakpoint($brk-print) {}
 */
/**
 * Playground example
 * Note: hide section below to reproduce CSS breakpoints
 */
/**
 * Remove the unit of a length
 * @param {Number} $number - Number to remove unit from
 * @return {Number} - Unitless number
 */
/**
 * Mixin converter for Pixel to REM, plus fallback in pixel for older browser
 * @param  {float}  $property  Name of property
 * @param  {[type]} $values... Top, Right, Bottom, Left pixel values
 * @return {css}    Property converted in REM and fallback
 *
 * Example: @include('padding', .5, .5, .15, .15);
 */
/**
 * Bubble
 * @param  {[type]} $width:            10px          [description]
 * @param  {[type]} $border:           2px           [description]
 * @param  {[type]} $quadrant:         0             [description]
 * @param  {[type]} $top:              ""            [description]
 * @param  {[type]} $right:            ""            [description]
 * @param  {[type]} $bottom:           ""            [description]
 * @param  {[type]} $left:             ""            [description]
 * @param  {[type]} $border-color:     white         [description]
 * @param  {[type]} $background-color: grey          [description]
 * @return {[type]}                    [description]
 */
/**
 * [inlineFrame description]
 * @return {[type]} [description]
 */
/**
 * GRADIENT MIXIN
 */
/* Groups of admin context files
================================================== */
/* Modules */
/**
 * @file
 * Administration menu.
 *
 * Implementation of Sons of Suckerfish Dropdowns.
 *
 * @see www.htmldog.com/articles/suckerfish
 */
#admin-menu, #admin-menu .dropdown {
  line-height: 1.4em;
  list-style: none;
  margin: 0;
  padding: 0;
  z-index: 10010; }

#admin-menu a, #admin-menu li > span {
  background: transparent none;
  border: none;
  color: #eee;
  font-weight: normal;
  text-align: left;
  text-decoration: none; }

#admin-menu .dropdown a, #admin-menu .dropdown li > span {
  border-right: 1px solid #323232;
  display: block;
  padding: 4px 8px; }

#admin-menu {
  background: #101010;
  font-size: 9px;
  font-family: lucida grande, tahoma, verdana, arial, sans-serif;
  left: 0;
  position: absolute;
  text-align: left;
  top: 0;
  width: 100%; }
  #admin-menu .dropdown {
    position: static; }
    #admin-menu .dropdown .admin-menu-icon a {
      padding: 1px 8px 4px; }
    #admin-menu .dropdown .admin-menu-icon img {
      vertical-align: bottom; }
    #admin-menu .dropdown .admin-menu-icon ul a {
      padding: 4px 8px; }
    #admin-menu .dropdown .admin-menu-action {
      float: right; }
      #admin-menu .dropdown .admin-menu-action a {
        border-left: 1px solid #323232;
        border-right: none; }
    #admin-menu .dropdown .admin-menu-search {
      float: right; }
    #admin-menu .dropdown li {
      background-image: none;
      float: left;
      height: 100%;
      list-style-image: none;
      list-style-type: none;
      margin: 0 !important;
      padding: 0; }
      #admin-menu .dropdown li li {
        background: #202020;
        filter: Alpha(opacity=88);
        opacity: 0.88;
        width: 160px; }
        #admin-menu .dropdown li li a {
          border-right: none;
          border-top: 1px solid #323232; }
        #admin-menu .dropdown li li li {
          filter: Alpha(opacity=100);
          opacity: 1; }
          #admin-menu .dropdown li li li li li:hover ul {
            display: block;
            left: auto; }
          #admin-menu .dropdown li li li li li.iehover ul {
            display: block;
            left: auto; }
          #admin-menu .dropdown li li li li:hover ul {
            display: block;
            left: auto; }
          #admin-menu .dropdown li li li li.iehover ul {
            display: block;
            left: auto; }
          #admin-menu .dropdown li li li:hover ul {
            display: block;
            left: auto; }
          #admin-menu .dropdown li li li.iehover ul {
            display: block;
            left: auto; }
        #admin-menu .dropdown li li.expandable {
          background-color: #45454a; }
          #admin-menu .dropdown li li.expandable ul {
            margin: -20px 0 0 160px; }
          #admin-menu .dropdown li li.expandable:hover a {
            border-color: #444;
            color: #eee; }
          #admin-menu .dropdown li li.expandable:hover li a {
            border-color: #323232; }
          #admin-menu .dropdown li li.expandable:hover li.expandable:hover a {
            border-color: #444;
            color: #eee; }
          #admin-menu .dropdown li li.expandable:hover li.expandable:hover li a {
            border-color: #323232; }
        #admin-menu .dropdown li li:hover {
          background-color: #101010; }
          #admin-menu .dropdown li li:hover ul {
            display: block;
            left: auto; }
          #admin-menu .dropdown li li:hover a {
            color: #fff; }
          #admin-menu .dropdown li li:hover li:hover a {
            color: #fff; }
          #admin-menu .dropdown li li:hover li:hover li:hover a {
            color: #fff; }
          #admin-menu .dropdown li li:hover li a {
            color: #eee; }
        #admin-menu .dropdown li li.iehover {
          background-color: #101010; }
          #admin-menu .dropdown li li.iehover ul {
            display: block;
            left: auto; }
          #admin-menu .dropdown li li.iehover li a {
            color: #eee; }
          #admin-menu .dropdown li li.iehover li.iehover li a {
            color: #eee; }
          #admin-menu .dropdown li li.iehover li.iehover li.iehover a {
            color: #fff;
            width: 90%; }
          #admin-menu .dropdown li li.iehover li.iehover a {
            color: #fff;
            width: 90%; }
          #admin-menu .dropdown li li.iehover a {
            color: #fff;
            width: 90%; }
      #admin-menu .dropdown li ul {
        background: none;
        display: none;
        left: -999em;
        line-height: 1.2em;
        margin: 0;
        position: absolute;
        width: 160px; }
      #admin-menu .dropdown li:hover ul {
        display: block;
        left: auto; }
        #admin-menu .dropdown li:hover ul ul {
          display: none;
          left: -999em; }
          #admin-menu .dropdown li:hover ul ul ul {
            display: none;
            left: -999em; }
            #admin-menu .dropdown li:hover ul ul ul ul {
              display: none;
              left: -999em; }
              #admin-menu .dropdown li:hover ul ul ul ul ul {
                display: none;
                left: -999em; }
      #admin-menu .dropdown li.iehover ul {
        display: block;
        left: auto; }
        #admin-menu .dropdown li.iehover ul ul {
          display: none;
          left: -999em; }
          #admin-menu .dropdown li.iehover ul ul ul {
            display: none;
            left: -999em; }
            #admin-menu .dropdown li.iehover ul ul ul ul {
              display: none;
              left: -999em; }
              #admin-menu .dropdown li.iehover ul ul ul ul ul {
                display: none;
                left: -999em; }
      #admin-menu .dropdown li.admin-menu-action:hover ul {
        right: 0; }
    #admin-menu .dropdown .admin-menu-tab {
      padding-bottom: 1px; }
      #admin-menu .dropdown .admin-menu-tab a {
        border-right: 1px solid #52565e; }
    #admin-menu .dropdown .admin-menu-search-results {
      display: block !important;
      left: auto !important;
      top: 100%; }
    #admin-menu .dropdown .admin-menu-users a {
      background-color: transparent;
      padding-right: 22px; }
  #admin-menu li.highlight {
    background-color: #eee !important; }
    #admin-menu li.highlight > a {
      border-color: #ccc !important;
      color: #101010 !important; }
  #admin-menu .admin-menu-search .form-item {
    margin: 0;
    padding: 0; }
  #admin-menu .admin-menu-search input {
    background: #fff none center right no-repeat;
    border: none;
    border-radius: 5px;
    font-size: 10px;
    margin: 1px 0;
    outline: none;
    padding: 2px 22px 2px 4px;
    width: 158px; }
  #admin-menu .admin-menu-search-results {
    width: 186px; }
    #admin-menu .admin-menu-search-results li {
      width: 186px; }

#admin-menu-wrapper {
  overflow: hidden; }

@media print {
  #admin-menu {
    display: none !important; }
  body.admin-menu {
    margin-top: 0 !important; } }

tr.admin-menu-tweak-permissions-processed {
  cursor: pointer;
  cursor: hand; }

body.admin-menu {
  margin-top: 20px !important; }

html.js fieldset.collapsible div.fieldset-wrapper {
  overflow: visible; }

body.logged-in .sliding-popup-top {
  display: none; }

/*# sourceMappingURL=data:application/json;base64, */
