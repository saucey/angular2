/* Force the charset
================================================== */
/* Bower Components
================================================== */
/* Compass Mixins */
/*
 * A partial implementation of the Ruby list functions from Compass:
 * https://github.com/Compass/compass/blob/stable/lib/compass/sass_extensions/functions/lists.rb
 */
/*
 * A partial implementation of the Ruby constants functions from Compass:
 * https://github.com/Compass/compass/blob/stable/lib/compass/sass_extensions/functions/constants.rb
 */
/*
 * A partial implementation of the Ruby display functions from Compass:
 * https://github.com/Compass/compass/blob/stable/core/lib/compass/core/sass_extensions/functions/display.rb
 */
/* Breakpoint SASS */
/* Reset file from Drupal Normalize.css */
/* ==========================================================================
   Normalize.scss settings
   ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7
 */
/* Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *  user zoom.
 * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *  `em` units.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio, canvas, progress, video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden], template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b, strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Improves image quality when scaled in IE 7.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.
 */
code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *  Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 * 4. Improves appearance and consistency in all browsers.
 */
button, input, optgroup, select, textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button, select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *  and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *  `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *  Known issue: inner spacing remains in IE 6.
 */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled], html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 *  Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *  (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Corrects text not wrapping in Firefox 3.
 * 4. Corrects alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0; }

/* Drupal
   ========================================================================== */
td.menu-disabled, ul.links, ul.links.inline, ul.links li, .block ul, div.admin, tr.even, tr.odd, tr.drag, tbody, tbody th, thead th, .breadcrumb, .item-list .icon, .item-list .title, .item-list ul, .item-list ul li, ol.task-list li.active, .form-item, tr.odd .form-item, tr.even .form-item, .form-item .description, .form-item label, .form-item label.option, .form-checkboxes, .form-radios, .form-checkboxes .form-item, .form-radios .form-item, .marker, .form-required, .more-link, .more-help-link, .item-list .pager, .item-list .pager li, .pager-current, .tips, ul.primary, ul.primary li, ul.primary li a, ul.primary li.active a, ul.primary li a:hover, ul.secondary, ul.secondary li, ul.secondary a, ul.secondary a.active, .resizable-textarea {
  margin: 0;
  padding: 0;
  border: 0;
  vertical-align: baseline; }

/* Drupal: system-menus.css */
ul.links, ul.links.inline, ul.links li, .block ul, ol, ul, .item-list ul, .item-list ul li {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after, q:before, q:after {
  content: '';
  content: none; }

/* Remember to highlight inserts somehow! */
ins {
  text-decoration: none; }

del {
  text-decoration: line-through; }

/**
 * Markup free clearing.
 *
 * Consider adding your own selectors to this instead of finding ways
 * to sneak the clearfix class into Drupal's markup.
 * From http://perishablepress.com/press/2009/12/06/new-clearfix-hack
 */
ul.links:after, div.admin-panel .body:after, .clearfix:after {
  content: ".";
  display: block;
  height: 0;
  clear: both;
  visibility: hidden; }

/* Exclude inline links from clearfix behavior */
ul.inline:after {
  content: "";
  display: none;
  clear: none; }

/* Groups of core files
================================================== */
/* SASS variables, functions, mixins, class and placeholders helpers */
/**
 * BREAKPOINTS for AEGON.nl current website.
 * Approach: Mobile First Method
 */
/**
 * Mobile
 *
 * Example: @include breakpoint($brk-mobile) {}
 * 
 * IMPORTANT: try to avoid the breakpoint below, since the theme is already
 * mobile first and everything need to be written mobile as default.
 */
/**
 * Generic Tablet and upper
 *
 * Example: @include breakpoint($brk-tablet) {}
 */
/**
 * iPad portrait and upper
 *
 * Example: @include breakpoint($brk-ipad-portrait) {}
 */
/**
 * iPad landscape and upper
 *
 * Example: @include breakpoint($brk-ipad-landscape) {}
 */
/**
 * Large desktop and upper
 *
 * Example: @include breakpoint($brk-large-desktop) {}
 */
/**
 * Device Pixel Ratio of at least 1.5 and upper
 *
 * Example: @include breakpoint($brk-hidpi) {}
 */
/**
 * Media print
 *
 * Example: @include breakpoint($brk-print) {}
 */
/**
 * Playground example
 * Note: hide section below to reproduce CSS breakpoints
 */
/**
 * Mixin converter for Pixel to REM, plus fallback in pixel for older browser
 * @param  {float}  $property  Name of property
 * @param  {[type]} $values... Top, Right, Bottom, Left pixel values
 * @return {css}    Property converted in REM and fallback
 *
 * Example: @include('padding', .5, .5, .15, .15);
 */
/**
 * Bubble
 * @param  {[type]} $width:            10px          [description]
 * @param  {[type]} $border:           2px           [description]
 * @param  {[type]} $quadrant:         0             [description]
 * @param  {[type]} $top:              ""            [description]
 * @param  {[type]} $right:            ""            [description]
 * @param  {[type]} $bottom:           ""            [description]
 * @param  {[type]} $left:             ""            [description]
 * @param  {[type]} $border-color:     white         [description]
 * @param  {[type]} $background-color: grey          [description]
 * @return {[type]}                    [description]
 */
/**
 * [inlineFrame description]
 * @return {[type]} [description]
 */
/* Core / Typography rules */
@font-face {
  font-family: 'senticosansdtlight';
  src: url('../fonts/senticosansdt-light-webfont.eot');
  src: url('../fonts/senticosansdt-light-webfont.eot?#iefix') format('embedded-opentype'), url('../fonts/senticosansdt-light-webfont.woff') format('woff'), url('../fonts/senticosansdt-light-webfont.ttf') format('truetype'), url('../fonts/senticosansdt-light-webfont.svg#senticosansdtlight') format('svg');
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'senticosansdtregular';
  src: url('../fonts/senticosansdt-regular-webfont.eot');
  src: url('../fonts/senticosansdt-regular-webfont.eot?#iefix') format('embedded-opentype'), url('../fonts/senticosansdt-regular-webfont.woff') format('woff'), url('../fonts/senticosansdt-regular-webfont.ttf') format('truetype'), url('../fonts/senticosansdt-regular-webfont.svg#senticosansdtregular') format('svg');
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'senticosansdtthin';
  src: url('../fonts/senticosansdt-thin-webfont.eot');
  src: url('../fonts/senticosansdt-thin-webfont.eot?#iefix') format('embedded-opentype'), url('../fonts/senticosansdt-thin-webfont.woff') format('woff'), url('../fonts/senticosansdt-thin-webfont.ttf') format('truetype');
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'senticosansdtmedium';
  src: url('../fonts/senticosansdt-medium-webfont.eot');
  src: url('../fonts/senticosansdt-medium-webfont.eot?#iefix') format('embedded-opentype'), url('../fonts/senticosansdt-medium-webfont.woff') format('woff'), url('../fonts/senticosansdt-medium-webfont.ttf') format('truetype');
  font-weight: normal;
  font-style: normal; }

/**
 * icon font created by icomoon; see how to change the name from icomoon to
 * aegon_icons for the files without breaking anything (in the first attempt it
 * _did_ break stuff)
 */
@font-face {
  font-family: 'aegon_icons';
  src: url('../fonts/icomoon.eot');
  src: url('../fonts/icomoon.eot?#iefix') format('embedded-opentype'), url('../fonts/icomoon.woff') format('woff'), url('../fonts/icomoon.ttf') format('truetype'), url('../fonts/icomoon.svg#icomoon') format('svg');
  font-weight: normal;
  font-style: normal; }

html {
  font-family: sans-serif;
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

body {
  font-family: 'senticosansdtlight', Arial, Verdana, sans-serif, Arial, Verdana, sans-serif;
  font-size: 18px;
  line-height: 25px;
  overflow-x: hidden;
  position: relative;
  left: 0;
  background-color: #3395d3;
  color: #1d1d1b; }

a {
  text-decoration: none;
  color: #3395d3; }

a, button {
  -webkit-tap-highlight-color: transparent;
  -webkit-tap-highlight-color: transparent; }

@media only screen and (min-width: 641px) {
  body {
    background-color: #ffffff; } }

h1 {
  font-size: 36px;
  font-size: 2.25rem;
  line-height: 36px;
  line-height: 2.25rem;
  margin: 25px 0px;
  margin: 1.5625rem 0rem;
  font-family: 'senticosansdtlight', Arial, Verdana, sans-serif;
  font-weight: normal;
  color: #3395d3;
  line-height: 46px; }
  h1.title {
    margin-top: 0; }

.subtext {
  font-family: 'senticosansdtlight', Arial, Verdana, sans-serif;
  font-size: 25px;
  color: #3395d3; }

.subheader {
  font-family: 'senticosansdtregular', Arial, Verdana, sans-serif;
  font-size: 22px; }

h2 {
  font-family: 'senticosansdtlight', Arial, Verdana, sans-serif;
  font-size: 40px;
  color: #3395d3;
  font-weight: normal;
  margin: 5px 0 20px 0;
  line-height: 40px; }

h3 {
  font-family: 'senticosansdtregular', Arial, Verdana, sans-serif;
  font-size: 22px;
  line-height: 22px;
  color: #3395d3;
  margin: 10px auto; }

h4 {
  font-family: 'senticosansdtregular', Arial, Verdana, sans-serif;
  font-size: 18px; }

h5 {
  font-family: 'senticosansdtlight', Arial, Verdana, sans-serif;
  font-size: 14px; }

ul {
  padding-left: 0px;
  padding-right: 0px; }
  ul li {
    list-style: none;
    font-family: 'senticosansdtlight', Arial, Verdana, sans-serif;
    font-size: 18px;
    line-height: 26px;
    line-height: 1.625rem; }
    ul li:before {
      display: block;
      position: relative;
      max-width: 0;
      max-height: 0;
      top: -3px;
      color: #3395d3;
      font-size: 25px; }
    ul li.bullet {
      margin-left: 20px; }
      ul li.bullet:before {
        font-family: 'aegon_icons', Arial, Verdana, sans-serif;
        left: -20px;
        content: '\2022'; }
    ul li.check {
      margin-left: 20px; }
      ul li.check:before {
        font-family: 'aegon_icons', Arial, Verdana, sans-serif;
        left: -20px;
        content: "v"; }
    ul li.arrow {
      margin-left: 20px;
      background-image: url('../images/ui/icon-arrow-right-blue.png'); }
      ul li.arrow:before {
        font-family: 'aegon_icons', Arial, Verdana, sans-serif;
        left: -20px;
        content: ">"; }

p {
  line-height: 23px;
  margin: 0; }

.text-left {
  text-align: left; }

.text-center {
  text-align: center; }

.text-right {
  text-align: right; }

@media only screen and (min-width: 641px) {
  h1 {
    font-size: 46px;
    font-size: 2.875rem;
    line-height: 46px;
    line-height: 2.875rem; }
  p {
    margin: 0px 0px 15px;
    margin: 0rem 0rem 0.9375rem; } }

/****** Aegon icons ******/
[class*="icon-"]:before {
  font-family: 'aegon_icons'; }

.icon-uniE601:before {
  content: '\e601'; }

.icon-uniE602:before {
  content: '\e602'; }

.icon-uniE603:before {
  content: '\e603'; }

.icon-uniE604:before {
  content: '\e604'; }

.icon-uniE605:before {
  content: '\e605'; }

.icon-uniE606:before {
  content: '\e606'; }

.icon-uniE607:before {
  content: '\e607'; }

.icon-uniE608:before {
  content: '\e608'; }

.icon-uniE609:before {
  content: '\e609'; }

.icon-uniE60B:before {
  content: '\e60b'; }

.icon-uniE60A:before {
  content: '\e60a'; }

.icon-uniE62B:before {
  content: '\e62b'; }

/* All system vendor modules */
/**
 * @file
 * Theme for for system messages.
 */
/* Message */
.messages {
  margin: 6px 0;
  padding: 10px 10px 10px 50px;
  /* LTR */
  background-position: 8px 8px;
  /* LTR */
  background-repeat: no-repeat;
  border: 1px solid; }
  .messages ul {
    margin: 0 0 0 1em;
    /* LTR */
    padding: 0; }
  .messages li {
    list-style-image: none; }

/* Status Messages */
.messages--status {
  background-image: url("/misc/message-24-ok.png");
  border-color: #be7; }

.messages--status, tr.ok {
  background-color: #f8fff0; }

.messages--status, .ok {
  color: #234600; }

/* Warning Messages */
.messages--warning {
  background-image: url("/misc/message-24-warning.png");
  border-color: #ed5; }

.messages--warning, tr.warning {
  background-color: #fffce5; }

.messages--warning, .warning {
  color: #333; }

/* Error Messages */
.messages--error {
  background-image: url("/misc/message-24-error.png");
  border-color: #ed541d; }

.messages--error, tr.error {
  background-color: #fef5f1; }

.messages--error, .error {
  color: #333; }

.error .error {
  color: #8c2e0b; }

/* Grid system, header, footer, sidebars, forms */
.row-fluid:before, .row-fluid:after {
  line-height: 0;
  display: table;
  content: ''; }
.row-fluid:after {
  clear: both; }
.row-fluid [class*="span"] {
  display: block;
  width: 100%;
  min-height: 30px;
  float: left;
  margin-left: 1.7094%;
  *margin-left: 1.65598%;
  box-sizing: border-box; }
  .row-fluid [class*="span"]:first-child {
    margin-left: 0; }
.row-fluid .span14 {
  width: 100%;
  *width: 99.94658%; }
.row-fluid .span13 {
  width: 92.73504%;
  *width: 92.68162%; }
.row-fluid .span12 {
  width: 85.47009%;
  *width: 85.41667%; }
  .row-fluid .span12 .container_12 {
    width: 100%;
    *width: 99.94681%; }
  .row-fluid .span12.center {
    float: none;
    margin: 0 auto; }
.row-fluid .span11 {
  width: 78.20513%;
  *width: 78.15171%; }
.row-fluid .span10 {
  width: 70.94017%;
  *width: 70.88675%; }
.row-fluid .span9 {
  width: 63.67521%;
  *width: 63.62179%; }
.row-fluid .span8 {
  width: 56.41026%;
  *width: 56.35684%; }
.row-fluid .span7 {
  width: 49.1453%;
  *width: 49.09188%; }
.row-fluid .span6 {
  width: 41.88034%;
  *width: 41.82692%; }
.row-fluid .span5 {
  width: 34.61538%;
  *width: 34.56197%; }
.row-fluid .span4 {
  width: 27.35043%;
  *width: 27.29701%; }
.row-fluid .span3 {
  width: 20.08547%;
  *width: 20.03205%; }
.row-fluid .span2 {
  width: 12.82051%;
  *width: 12.76709%; }
.row-fluid .span1 {
  width: 5.55556%;
  *width: 5.50214%; }

.container_12 .row-fluid [class*='span'] {
  margin-left: 2%;
  *margin-left: 1.9375%;
  min-height: 10px; }
  .container_12 .row-fluid [class*='span']:first-child {
    margin-left: 0; }
.container_12 .row-fluid .span12 {
  width: 100%;
  *width: 99.9375%; }
.container_12 .row-fluid .span11 {
  width: 91.5%;
  *width: 91.4375%; }
.container_12 .row-fluid .span10 {
  width: 83%;
  *width: 82.9375%; }
.container_12 .row-fluid .span9 {
  width: 74.5%;
  *width: 74.4375%; }
.container_12 .row-fluid .span8 {
  width: 66%;
  *width: 65.9375%; }
.container_12 .row-fluid .span7 {
  width: 57.5%;
  *width: 57.4375%; }
.container_12 .row-fluid .span6 {
  width: 49%;
  *width: 48.9375%; }
.container_12 .row-fluid .span5 {
  width: 40.5%;
  *width: 40.4375%; }
.container_12 .row-fluid .span4 {
  width: 32%;
  *width: 31.9375%; }
.container_12 .row-fluid .span3 {
  width: 23.5%;
  *width: 23.4375%; }
.container_12 .row-fluid .span2 {
  width: 15%;
  *width: 14.9375%; }
.container_12 .row-fluid .span1 {
  width: 6.5%;
  *width: 6.4375%; }

@media screen and (min-width: 641px) and (max-width: 900px) {
  .row-fluid {
    margin-bottom: 5px; }
  .container_12 .row-fluid.col3 .span4 {
    width: 49%;
    *width: 48.9375%; }
    .container_12 .row-fluid.col3 .span4:last-child {
      margin: 5px 0 0; } }

@media screen and (max-width: 640px) {
  .row-fluid {
    margin-bottom: 0; }
    .row-fluid .span14 {
      margin-bottom: 5px; }
  .container_12 .row-fluid [class*='span'] {
    width: 100%;
    margin-bottom: 5px;
    margin-left: 0; } }

section.content.fullwidth {
  width: auto;
  margin: 0; }

/**
 * DL DT DD
 */
.container_12 dl.row-fluid {
  overflow: hidden; }
  .container_12 dl.row-fluid dt {
    float: left; }
    .container_12 dl.row-fluid dt[class*='span'] {
      margin-left: 2%;
      *margin-left: 1.9375%; }
      .container_12 dl.row-fluid dt[class*='span']:first-child, .container_12 dl.row-fluid dt[class*='span']:first-of-type {
        margin-left: 0; }
  .container_12 dl.row-fluid dd {
    float: left; }
    .container_12 dl.row-fluid dd[class*='span'] {
      margin-left: 2%;
      *margin-left: 1.9375%; }
      .container_12 dl.row-fluid dd[class*='span']:first-child, .container_12 dl.row-fluid dd[class*='span']:first-of-type {
        margin-left: 0; }

@media only screen and (max-width: 640px) {
  .container_12 .row-fluid [class*="span"] {
    margin-left: 0;
    width: 100%; }
  .container_12 .form-item [class*="span"] {
    margin-left: 0;
    margin-bottom: 5px;
    width: 100%; } }

header.header {
  position: relative;
  margin: 0 auto;
  padding: 0;
  height: 63px;
  height: 3.9375rem;
  min-height: 63px;
  min-height: 3.9375rem;
  display: table;
  width: 100%; }
  header.header .left, header.header .middle, header.header .right {
    display: table-cell;
    vertical-align: middle; }
  header.header .left {
    width: 30%;
    text-align: left;
    padding-left: 1.5rem;
    min-height: 63px;
    min-height: 3.9375rem; }
  header.header .middle {
    width: 40%;
    text-align: center; }
  header.header .right {
    width: 30%;
    text-align: right;
    padding-right: 1.5rem; }
  header.header .tap-menu a {
    width: 20px;
    height: 17px;
    background: url('../images/ui/tap-menu.png') no-repeat top left transparent;
    text-indent: -9999px;
    display: inline-block;
    vertical-align: middle; }
  header.header .mobile-logo a {
    display: inline-block;
    vertical-align: middle; }
  header.header .mobile-logo img {
    display: block;
    width: 100%;
    height: 100%;
    max-width: 90px;
    padding-top: 6px; }
  header.header .right a {
    vertical-align: middle; }
  header.header .region-header-left {
    display: none; }
  header.header .region-header {
    display: none; }
    header.header .region-header .block {
      display: none;
      float: left;
      width: auto;
      position: relative; }

@media only screen and (min-width: 641px) {
  header.header {
    min-height: 90px;
    min-height: 5.625rem;
    padding: 0 7.3%; }
    header.header .right {
      float: none;
      width: auto;
      padding: 0; }
    header.header .tap-menu, header.header .mobile-logo {
      display: none; }
    header.header .region-header-left, header.header .region-header {
      display: table-cell;
      vertical-align: middle; }
      header.header .region-header-left .block, header.header .region-header .block {
        display: block; } }

.footer-wrap {
  margin: 0;
  margin-top: 50px;
  margin-top: 3.125rem; }
  .footer-wrap .footer-blk, .footer-wrap .footer-quick-links {
    background: #00304c;
    margin-bottom: 0; }

.footer-blk {
  padding-top: 40px;
  padding-top: 2.5rem;
  line-height: 22px;
  line-height: 1.375rem;
  font-family: 'senticosansdtregular', Arial, Verdana, sans-serif; }
  .footer-blk .region.first {
    display: none;
    overflow: hidden;
    margin-bottom: 40px;
    margin-bottom: 2.5rem; }
    .footer-blk .region.first ul {
      margin: 0; }
  .footer-blk .region.second .social-icons {
    border-bottom: 1px solid #335970;
    margin-bottom: 25px;
    margin-bottom: 1.5625rem;
    padding-bottom: 25px;
    padding-bottom: 1.5625rem; }
    .footer-blk .region.second .social-icons ul {
      padding: 0;
      margin: 0; }
      .footer-blk .region.second .social-icons ul li {
        float: left;
        display: block;
        padding-right: 17px;
        padding-right: 1.0625rem;
        margin: 0; }
        .footer-blk .region.second .social-icons ul li a {
          display: inline-block;
          width: 28px;
          height: 28px;
          text-indent: -9999px;
          background-position: top left;
          background-repeat: no-repeat; }
          .footer-blk .region.second .social-icons ul li a.youtube {
            width: 25px;
            background-image: url(../images/ui/icon-social-youtube.png); }
          .footer-blk .region.second .social-icons ul li a.twitter {
            width: 27px;
            background-image: url(../images/ui/icon-social-twitter.png); }
          .footer-blk .region.second .social-icons ul li a.rss {
            width: 26px;
            background-image: url(../images/ui/icon-social-rss.png); }
          .footer-blk .region.second .social-icons ul li a.googleplus {
            width: 32px;
            background-image: url(../images/ui/icon-social-googleplus.png); }
          .footer-blk .region.second .social-icons ul li a.facebook {
            width: 16px;
            background-image: url(../images/ui/icon-social-facebook.png); }
  .footer-blk .region.second .span4 {
    margin-bottom: 25px;
    margin-bottom: 1.5625rem; }
    .footer-blk .region.second .span4:last-child {
      margin-bottom: 10px;
      margin-bottom: 0.625rem; }
  .footer-blk .region.second .finance-link {
    float: left;
    font-size: 15px;
    width: 80%; }
    .footer-blk .region.second .finance-link a {
      color: #ffffff; }
  .footer-blk .region.second .finance-img {
    float: left;
    margin-right: 2%; }
  .footer-blk h5 {
    font-weight: normal;
    color: #fff;
    margin: 0px 0px 25px;
    margin: 0rem 0rem 1.5625rem;
    font-family: 'senticosansdtlight', Arial, Verdana, sans-serif;
    font-size: 18px; }
  .footer-blk ul li {
    line-height: 26px;
    line-height: 1.625rem;
    margin: 0px 0px 15px;
    margin: 0rem 0rem 0.9375rem; }
    .footer-blk ul li:last-child {
      margin: 0; }

.footer-quick-links {
  padding: 15px 0px;
  padding: 0.9375rem 0rem; }
  .footer-quick-links .center {
    overflow: hidden;
    padding-top: 15px;
    padding-top: 0.9375rem;
    border-top: 1px solid #335970; }
  .footer-quick-links ul {
    margin: 0;
    padding: 0; }
    .footer-quick-links ul li {
      float: left;
      margin: 0px 20px 0px 0px;
      margin: 0rem 1.25rem 0rem 0rem; }
      .footer-quick-links ul li a {
        font-size: 14px;
        font-size: 0.875rem;
        line-height: 14px;
        line-height: 0.875rem; }
        .footer-quick-links ul li a:hover {
          color: #ffffff; }
      .footer-quick-links ul li:last-child {
        margin: 0; }

@media only screen and (min-width: 641px) {
  .footer-blk .region.first {
    display: block; }
  .footer-blk .region.second {
    padding-top: 25px;
    padding-top: 1.5625rem;
    border-top: 1px solid #335970; }
    .footer-blk .region.second .social-icons {
      border-bottom: none; }
      .footer-blk .region.second .social-icons ul li {
        padding-right: 10px;
        padding-right: 0.625rem; }
    .footer-blk .region.second .span4, .footer-blk .region.second .span4:last-child {
      margin-bottom: 0;
      padding-bottom: 0; }
  .footer-quick-links {
    padding: 25px 0px;
    padding: 1.5625rem 0rem; }
    .footer-quick-links .center {
      padding-top: 25px;
      padding-top: 1.5625rem; } }

@media only screen and (min-width: 1350px) {
  .footer-blk .region.second .social-icons ul li {
    padding-right: 20px;
    padding-right: 1.25rem; } }

.region-navigation {
  display: none; }

@media only screen and (min-width: 641px) {
  .region-navigation {
    position: relative;
    display: block;
    width: 170px;
    background: #3395D3;
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    z-index: 9999; }
    .region-navigation:after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 170px;
      height: 90px;
      background-image: url('../images/logo_aegon.png');
      background-position: center center;
      background-repeat: no-repeat;
      background-color: #ffffff; } }

.region-navigation .stickleft, .region-navigation .mobile {
  display: none; }

.clearfix:before, .clearfix:after {
  content: " ";
  display: table; }
.clearfix:after {
  clear: both; }

.wrapper {
  background-color: #ffffff; }

@media only screen and (min-width: 641px) {
  .scroll {
    position: relative;
    width: auto;
    padding-left: 170px;
    padding-left: 10.625rem; } }

@media only screen and (min-width: 1350px) {
  .wrapper {
    width: 1350px;
    max-width: 1350px; } }

/**
 * TEMP STUFF for DEV
 */
#inpage-chat {
  display: none; }

.frame {
  position: relative;
  min-width: 220px;
  min-height: 100px;
  padding: 15px;
  border: 2px solid #edebe5;
  border-radius: 3px; }

.bubble:before, .bubble:after {
  content: '';
  display: block;
  position: absolute;
  left: -20px;
  border-color: transparent #edebe5 transparent transparent;
  bottom: 20px;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 10px;
  border-radius: inherit; }
.bubble:after {
  left: -18px;
  border-color: transparent #ffffff transparent transparent; }

.bubbleTopRight:before, .bubbleTopRight:after {
  content: '';
  display: block;
  position: absolute;
  top: -20px;
  border-color: transparent transparent #edebe5 transparent;
  right: 20px;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 10px;
  border-radius: inherit; }
.bubbleTopRight:after {
  top: -18px;
  border-color: transparent transparent #ffffff transparent; }

/*----- UTILITY STYLES -----*/
span.middle-enforcer {
  display: inline-block;
  width: 0;
  height: 100%;
  vertical-align: middle; }

div.lightbox {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 100%;
  margin: 0;
  padding: 0;
  background-color: #1d1d1b;
  opacity: 0.4;
  z-index: 5; }

/*----- Back to top -----*/
.goTop-wrapper {
  position: fixed;
  top: 0;
  right: 7.26496%;
  z-index: 1; }
  .goTop-wrapper .goTop a {
    display: inline-block;
    width: 40px;
    height: 40px;
    text-indent: -9999px;
    background: #3395D3 url(../images/ui/icon-arrow-up.png) center center no-repeat;
    border-bottom-right-radius: 3px;
    border-bottom-left-radius: 3px;
    box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.3); }
    .goTop-wrapper .goTop a:hover {
      background-color: #51A5DA; }
    .goTop-wrapper .goTop a:active {
      background-color: #007BC8; }

/*----- Search form @ header -----*/
.block-search .container-inline {
  position: absolute;
  right: 109px; }
.block-search input.form-text {
  width: 130px;
  height: 38px;
  margin: 0;
  padding: 5px 25px 5px 10px;
  padding: 0.3125rem 1.5625rem 0.3125rem 0.625rem;
  border-radius: 3px;
  border-radius: 0.1875rem;
  border: solid 1px #C5D6DD;
  outline: none;
  background: #ffffff;
  color: #1D1D19;
  box-shadow: inset 0 1px 0 0 rgba(0, 48, 76, 0.4);
  transition: all .5s; }
  .block-search input.form-text:focus {
    width: 260px;
    box-shadow: 0 0 5px rgba(109, 207, 246, 0.5); }
  .block-search input.form-text.form-autocomplete {
    background-image: none; }
.block-search .form-actions {
  position: absolute;
  top: 0;
  right: 0; }
  .block-search .form-actions .form-submit {
    background: url(../images/ui/icon-search-header.png) 100% center no-repeat;
    width: 36px;
    height: 38px;
    text-indent: -9999px;
    border: none;
    padding: 0; }

/*----- throbber -----*/
.throbber {
  display: block;
  background-image: url('../images/ui/loader-blue.gif');
  width: 32px;
  height: 32px; }

/*----- UI mobile tap status -----*/
body.mobile-tap section.content:after {
  display: none;
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.3); }

@media only screen and (max-width: 640px) {
  /*----- UI mobile tap status -----*/
  body.mobile-tap section.content {
    position: relative;
    overflow: hidden; }
    body.mobile-tap section.content:after {
      display: block; } }

@media only screen and (min-width: 641px) {
  .goTop-wrapper {
    display: none; } }

@media only screen and (min-width: 901px) {
  .block-search input.form-text:focus {
    width: 400px; } }

@media only screen and (min-width: 1024px) and (orientation: landscape) {
  .block-search input.form-text:focus {
    width: 500px; } }

form:valid ul.actions.edit button {
  z-index: 3; }
form:invalid ul.actions.edit button:not(.cancel) {
  z-index: 1; }

.errorText {
  text-align: left; }

select.visited:invalid ~ .ddTitle {
  border-color: #C50B1F; }
select.visited:invalid ~ .errorText {
  display: block; }

input.visited:invalid ~ .errorText {
  display: block; }
input.visited:invalid {
  border-color: #C50B1F; }
input.visited:invalid ~ span.checkbox {
  border-color: #C50B1F; }

input ~ .errorText, select ~ .errorText {
  line-height: 14px;
  font-size: 14px;
  color: #C50B1F;
  position: relative;
  top: -58px; }
input ~ .errorText, input:valid ~ .errorText, select ~ .errorText, select:valid ~ .errorText {
  display: none; }
input[type=checkbox] ~ .errorText, select[type=checkbox] ~ .errorText {
  left: -35px;
  top: -50px; }

select ~ .errorText {
  top: -14px; }

select.visited:invalid ~ .ddTitle {
  margin-top: -14px; }

/* All library components and specific modules */
button, .button {
  cursor: pointer;
  height: 38px;
  padding: 8px 10px 12px 10px;
  background-color: #3395d3;
  color: #ffffff;
  font-size: 18px;
  border-radius: 5px;
  border: 0;
  outline: 0;
  white-space: nowrap; }
  button:hover, .button:hover {
    opacity: 0.8; }
  button.right, .button.right {
    margin-left: 10px; }
  button.left, .button.left {
    margin-right: 10px; }
  button.top, .button.top {
    margin-bottom: 10px; }
  button.bottom, .button.bottom {
    margin-top: 10px; }
  button.red, .button.red {
    background-color: #C50B1F; }
  button.arrow:after, .button.arrow:after {
    font-size: 11px;
    font-family: 'aegon_icons', Arial, Verdana, sans-serif;
    content: "\e600";
    padding: 16px 14px;
    margin-right: -10px;
    margin-left: 10px;
    background-color: #66b0de; }
  button.arrow.blue:after, .button.arrow.blue:after {
    margin-left: 0;
    background-color: #3395d3; }
  button.arrow.red:after, .button.arrow.red:after {
    margin-left: 0;
    background-color: #C50B1F; }
  button.white, .button.white {
    background-color: #ffffff;
    color: #3395d3; }
    button.white.arrow:before, .button.white.arrow:before {
      font-size: 11px;
      font-family: 'aegon_icons', Arial, Verdana, sans-serif;
      content: "\e600";
      padding: 11px;
      margin-left: -10px;
      background-color: #ffffff;
      color: #3395d3; }
    button.white:after, .button.white:after {
      content: "";
      padding: 0;
      margin-right: 0;
      margin-left: 0;
      background-color: #ffffff; }

.responsive-approach {
  height: initial;
  line-height: 38px;
  line-height: 2.375rem;
  padding: 0px 10px;
  padding: 0rem 0.625rem;
  border-radius: 3px;
  border-radius: 0.1875rem;
  display: inline-block;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }
  .responsive-approach:active {
    opacity: initial; }
  .responsive-approach.arrow:after {
    display: inline-block;
    height: inherit;
    line-height: inherit;
    vertical-align: top;
    float: none;
    padding: 0px 14px;
    padding: 0rem 0.875rem;
    border-radius: 0px 3px 3px 0px;
    border-radius: 0rem 0.1875rem 0.1875rem 0rem; }

label.checkbox {
  padding-right: 0;
  display: inline-block;
  padding-left: 35px;
  position: relative;
  line-height: 32px;
  text-align: left;
  margin-top: 4px;
  width: auto; }
  label.checkbox > input[type="checkbox"] {
    opacity: 0;
    top: 4px;
    left: 5px; }
    label.checkbox > input[type="checkbox"]:checked + span.checkbox {
      background-color: #eeebe5; }
      label.checkbox > input[type="checkbox"]:checked + span.checkbox:before {
        text-align: right;
        list-style-type: disc;
        position: relative;
        content: "\e632";
        color: #3395d3;
        left: -5px; }
    label.checkbox > input[type="checkbox"] + span.checkbox {
      border: 1px solid #e0e0e0;
      border-radius: 5px;
      background-color: #eeebe5;
      display: inline-block;
      height: 32px;
      width: 32px;
      position: absolute;
      top: -4px;
      left: -3px;
      cursor: pointer; }
      label.checkbox > input[type="checkbox"] + span.checkbox:before {
        display: block;
        font-family: 'aegon_icons', Arial, Verdana, sans-serif;
        font-size: 20px;
        content: ""; }
      label.checkbox > input[type="checkbox"] + span.checkbox.hidden {
        display: none; }
      label.checkbox > input[type="checkbox"] + span.checkbox + span.label {
        float: left; }
  label.checkbox.required {
    margin-top: 15px; }

ul.links {
  padding: 20px 0px;
  padding: 1.25rem 0rem; }
  ul.links.links--inline {
    padding: 30px 0px;
    padding: 1.875rem 0rem; }

label.radio {
  display: inline-block;
  padding-left: 18px;
  position: relative;
  line-height: 32px;
  text-align: left;
  margin-top: 17px;
  width: auto; }
  label.radio > input[type="radio"] {
    opacity: 0;
    top: 17px;
    left: 5px; }
    label.radio > input[type="radio"]:checked + span.radio {
      background-color: #eeebe5; }
      label.radio > input[type="radio"]:checked + span.radio:before {
        text-align: right;
        list-style-type: disc;
        position: relative;
        content: "\e633";
        color: #3395d3;
        left: -3px;
        top: 4px; }
    label.radio > input[type="radio"] + span.radio {
      border: 1px solid #e0e0e0;
      border-radius: 16px;
      background-color: #eeebe5;
      display: inline-block;
      height: 31px;
      width: 31px;
      position: absolute;
      top: -17px;
      left: -3px;
      cursor: pointer; }
      label.radio > input[type="radio"] + span.radio:before {
        display: block;
        font-family: 'aegon_icons', Arial, Verdana, sans-serif;
        font-size: 31px;
        content: ""; }

div.dd {
  font-family: inherit;
  font-size: inherit; }

input[type=text], input[type=email], input[type=number], select, div.dd div.ddTitle, label.dd div.ddTitle {
  height: 44px;
  padding: 9px 10px;
  padding-right: 10px;
  border-radius: 5px;
  border: 1px solid #e0e0e0;
  box-shadow: none;
  outline: 0px;
  background-color: #eeebe5;
  white-space: nowrap;
  margin-top: 0px;
  margin-bottom: 0px; }

.ddTitle .arrow:after {
  font-size: 11px;
  font-family: 'aegon_icons', Arial, Verdana, sans-serif;
  content: "\e630"; }

input[type=text], input[type=email], input[type=number], select, div.dd {
  width: 228px; }
  input[type=text].half, input[type=email].half, input[type=number].half, select.half, div.dd.half {
    width: 109px;
    margin-right: 10px;
    float: left; }
    input[type=text].half:last-child, input[type=email].half:last-child, input[type=number].half:last-child, select.half:last-child, div.dd.half:last-child {
      float: none; }
  input[type=text].quarter, input[type=email].quarter, input[type=number].quarter, select.quarter, div.dd.quarter {
    width: 47px;
    margin-right: 10px;
    float: left; }
    input[type=text].quarter:last-child, input[type=email].quarter:last-child, input[type=number].quarter:last-child, select.quarter:last-child, div.dd.quarter:last-child {
      float: none; }

input[type=checkbox], input[type=radio] {
  width: auto; }

.messages {
  position: relative;
  border: none;
  border-radius: 5px;
  border-radius: 0.3125rem;
  padding: 20px 30px;
  padding: 1.25rem 1.875rem;
  background-image: none;
  /**
   * Colors below follow the current aegon's messages theme
   */ }
  .messages .header {
    margin-bottom: .2em;
    font-family: 'senticosansdtregular', Arial, Verdana, sans-serif;
    font-weight: bold; }
  .messages.messages--status {
    background-color: #C1ECD5; }
    .messages.messages--status .header {
      color: #49af57; }
  .messages.messages--error {
    background-color: #edd5d9; }
    .messages.messages--error .header {
      color: #C41F2C; }
  .messages.messages--warning {
    background-color: #8cd1e6; }
    .messages.messages--warning .header {
      color: #ffffff; }

@media only screen and (min-width: 641px) {
  .messages {
    padding-left: 70px;
    padding-left: 4.375rem; }
    .messages .icon {
      position: absolute;
      top: 50%;
      left: 20px;
      font-size: 30px;
      font-size: 1.875rem;
      margin-top: -15px;
      margin-top: -0.9375rem;
      font-family: 'aegon_icons'; }
    .messages.messages--status .icon:before {
      content: '\e632';
      color: #49af57; }
    .messages.messages--error .icon .path1:before {
      font-family: inherit;
      content: '\e62e';
      color: #ffffff; }
    .messages.messages--error .icon .path2:before {
      font-family: inherit;
      content: "\e634";
      margin-left: -1.18262em;
      color: #C50B1F; }
    .messages.messages--error .icon .path3:before {
      font-family: inherit;
      content: "\e635";
      margin-left: -1.185em;
      color: #C50B1F; }
    .messages.messages--warning .icon:before {
      content: '\e60d';
      color: #ffffff; } }

/**
 * @Jorg you need to align the stuff commented below, with the Drupal way.
 * If you need more specific specification different from the default ones like:
 * - .success => .messages.messages--status
 * - .warning => .messages.messages--warning
 * - .error => .messages.messages--error
 */
div.success {
  background-color: #ffffff;
  z-index: 6;
  margin: 0 auto;
  width: 400px;
  position: relative; }
  div.success .header {
    color: #1d1d1b; }

div.error {
  background-color: #E6CECD; }
  div.error .header {
    color: #C50B1F; }

div.error, div.success {
  padding: 20px 15px;
  border-radius: 3px;
  display: none;
  margin-bottom: 18px;
  padding-left: 40px; }
  div.error.visible, div.success.visible {
    display: block; }
  div.error .header, div.success .header {
    font-family: 'senticosansdtmedium', Arial, Verdana, sans-serif;
    margin-bottom: 10px; }
    div.error .header:before, div.success .header:before {
      font-family: 'aegon_icons', Arial, Verdana, sans-serif;
      content: "\e62e";
      margin-left: -20px;
      margin-right: 5px;
      left: -10px;
      position: relative; }
  div.error button.blue.arrow:first-of-type, div.success button.blue.arrow:first-of-type {
    float: right;
    display: block; }
    @media screen and (max-width: 640px) {
      div.error button.blue.arrow:first-of-type, div.success button.blue.arrow:first-of-type {
        display: none; } }
  div.error button.blue.arrow:last-of-type, div.success button.blue.arrow:last-of-type {
    display: none;
    margin-top: 20px; }
    @media screen and (max-width: 640px) {
      div.error button.blue.arrow:last-of-type, div.success button.blue.arrow:last-of-type {
        display: block; } }

.submessages {
  position: relative;
  display: block;
  border: none;
  border-radius: 5px;
  border-radius: 0.3125rem;
  padding: 3px 0px;
  padding: 0.1875rem 0rem; }
  .submessages:before {
    font-family: 'aegon_icons';
    position: absolute;
    top: 7px;
    left: -38px;
    font-size: 25px; }
  .submessages.submessages--status {
    color: #49af57; }
    .submessages.submessages--status:before {
      content: '\e632'; }
  .submessages.submessages--error {
    color: #edd5d9; }
    .submessages.submessages--error:before {
      content: '\e62b'; }
  .submessages.submessages--warning {
    color: #B0A126; }
    .submessages.submessages--warning:before {
      content: '\e632'; }

/**
 * Breadcrumb / Easy Breadcrumb @ Drupal @ header
 */
.breadcrumb {
  width: auto;
  float: none;
  display: inline-block;
  margin: 0;
  vertical-align: middle; }
  .breadcrumb ul {
    overflow: hidden; }
    .breadcrumb ul li {
      float: left;
      padding-left: 15px;
      padding-left: 0.9375rem;
      margin-right: 10px;
      margin-right: 0.625rem;
      background: url('../images/ui/icon-arrow-narrow-right-blue.png') center left no-repeat;
      color: #00304C; }
      .breadcrumb ul li.first {
        background: none;
        padding: 0; }

/**
 * Login link
 */
.login-link {
  display: inline-block;
  line-height: 35px;
  line-height: 2.1875rem;
  padding: 0px 8px;
  padding: 0rem 0.5rem;
  border-radius: 3px;
  border-radius: 0.1875rem;
  font-family: 'senticosansdtregular';
  white-space: nowrap;
  background-color: #49af57;
  color: #ffffff; }
  .login-link:hover {
    background-color: #C1ECD5;
    color: #49af57; }
  .login-link:active {
    background-color: #49af57;
    color: #ffffff; }

@media only screen and (min-width: 641px) {
  .login-link {
    line-height: 38px;
    line-height: 2.375rem;
    padding: 0px 10px 0px 35px;
    padding: 0rem 0.625rem 0rem 2.1875rem;
    background-image: url(../images/ui/icon-lock.png);
    background-position: 13% 50%;
    background-repeat: no-repeat; }
    .login-link:hover {
      background-image: url(../images/ui/icon-lock-green.png); }
    .login-link:active {
      background-image: url(../images/ui/icon-lock.png); } }

/* Pages specific styles */
/* All modules, theme modules*/
/**
 * @file
 * Theme for for tabs primary.
 */
ul.tabs {
  padding: 0 4.6875%; }
  ul.tabs.primary {
    overflow: hidden;
    margin: 0px 0px 16px 0px;
    margin: 0rem 0rem 1rem 0rem;
    border-bottom: 1px solid #bbb;
    list-style-type: none; }
    ul.tabs.primary li {
      display: block;
      float: left;
      margin-right: 1em;
      padding: 0;
      background: none; }
      ul.tabs.primary li a {
        display: block;
        padding: 4px 12px;
        padding: 0.25rem 0.75rem;
        padding: 0.3em 0.8em;
        background-color: #eee;
        text-decoration: none; }
        ul.tabs.primary li a.active {
          background-color: #ccc; }
        ul.tabs.primary li a:hover {
          background-color: #bbb; }

.smartbanner_show {
  margin-top: 82px; }
  .smartbanner_show .smartbanner {
    display: block; }

.smartbanner {
  font-family: Helvetica Neue, sans-serif;
  position: absolute;
  z-index: 9999999;
  top: 0;
  left: 0;
  display: none;
  overflow: hidden;
  width: 100%;
  height: 78px;
  border-bottom: 1px solid #e8e8e8;
  background: #f4f4f4;
  background: linear-gradient(to bottom, #f4f4f4 0, #cdcdcd 100%);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); }

.smartbanner__container {
  margin: 0 auto; }

.smartbanner__close {
  font-family: ArialRoundedMTBold, Arial;
  font-size: 15px;
  line-height: 15px;
  position: absolute;
  top: 5px;
  left: 5px;
  display: block;
  width: 14px;
  height: 14px;
  text-align: center;
  text-decoration: none;
  color: #fff;
  border: 2px solid #fff;
  border-radius: 14px;
  background: #070707;
  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.4);
  text-shadow: none; }
  .smartbanner__close:active {
    font-size: 13px;
    color: #aaa; }
  .smartbanner__close:hover {
    font-size: 13px;
    color: #aaa; }

.smartbanner__icon {
  position: absolute;
  top: 10px;
  left: 30px;
  display: block;
  width: 57px;
  height: 57px;
  border-radius: 10px;
  background: rgba(0, 0, 0, 0.6);
  background-size: cover;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3); }

.smartbanner__info {
  font-size: 11px;
  font-weight: bold;
  line-height: 1.2em;
  position: absolute;
  top: 18px;
  left: 98px;
  width: 44%;
  color: #6a6a6a;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8); }

.smartbanner__title {
  font-size: 13px;
  font-weight: bold;
  line-height: 18px;
  color: #4d4d4d; }

.smartbanner-button {
  font-size: 14px;
  font-weight: bold;
  line-height: 24px;
  position: absolute;
  top: 24px;
  right: 20px;
  min-width: 10%;
  height: 24px;
  padding: 0 10px;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  color: #6a6a6a;
  border: 1px solid #bfbfbf;
  border-radius: 3px;
  background: #efefef;
  background: linear-gradient(to bottom, #efefef 0, #dcdcdc 100%);
  box-shadow: 0 1px 0 rgba(255, 255, 255, 0.6), 0 1px 0 rgba(255, 255, 255, 0.7) inset;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8); }
  .smartbanner-button:active, .smartbanner-button:hover {
    color: #6a6a6a;
    background: #dcdcdc;
    background: linear-gradient(to bottom, #dcdcdc 0, #efefef 100%); }

.smartbanner_android {
  border-color: #212228;
  border-top: 5px solid #88b131;
  background-color: #3d3d3d;
  box-shadow: none; }
  .smartbanner_android .smartbanner__icon {
    background-color: transparent;
    box-shadow: none; }
  .smartbanner_android .smartbanner__close {
    line-height: 17px;
    width: 17px;
    height: 17px;
    color: #b1b1b3;
    border: 0;
    background: #1c1e21;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.8) inset, 0 1px 1px rgba(255, 255, 255, 0.3);
    text-shadow: 0 1px 1px #000; }
    .smartbanner_android .smartbanner__close:active {
      color: #eee; }
    .smartbanner_android .smartbanner__close:hover {
      color: #eee; }
  .smartbanner_android .smartbanner__info {
    color: #cdcdcd;
    text-shadow: 0 1px 2px #000; }
  .smartbanner_android .smartbanner__title {
    font-weight: bold;
    color: #fff; }
  .smartbanner_android .smartbanner-button {
    min-width: 12%;
    padding: 1px;
    color: #cdcdcd;
    border: 1px solid #dcdcdc;
    border-radius: 0;
    background: 0;
    box-shadow: none; }
    .smartbanner_android .smartbanner-button:active {
      background: 0; }
    .smartbanner_android .smartbanner-button:hover {
      background: 0; }
  .smartbanner_android .smartbanner-button__text {
    display: block;
    padding: 0 10px;
    text-align: center;
    text-transform: none;
    background: #42b6c9;
    background: linear-gradient(to bottom, #42b6c9 0, #42b6c9 100%);
    box-shadow: none;
    text-shadow: none; }
    .smartbanner_android .smartbanner-button__text:active {
      background: #2ac7e1; }
    .smartbanner_android .smartbanner-button__text:hover {
      background: #2ac7e1; }

body.sliding-popup-processed .sliding-popup-top {
  background: transparent; }
  body.sliding-popup-processed .sliding-popup-top .btn-close {
    position: absolute;
    top: 50%;
    right: 0;
    width: 20px;
    height: 20px;
    margin: -10px 15px 0 0;
    text-decoration: none;
    background: url(../../../images/icons/icon-close-cookie.png) 0 0 no-repeat;
    background-size: 20px 20px; }
  body.sliding-popup-processed .sliding-popup-top .popup-content {
    position: relative;
    max-width: 100%;
    margin: 0;
    padding: 15px;
    color: #fff;
    background: #2163ae; }
    body.sliding-popup-processed .sliding-popup-top .popup-content #popup-text {
      float: none;
      max-width: 100%;
      margin: 0; }
      body.sliding-popup-processed .sliding-popup-top .popup-content #popup-text p {
        font-family: Arial, Verdana, sans-serif;
        font-size: 12px;
        font-weight: normal;
        line-height: 16px;
        margin: 0 26px 0 0;
        color: #fff !important; }
      body.sliding-popup-processed .sliding-popup-top .popup-content #popup-text a {
        text-decoration: underline;
        color: #fff !important; }
    body.sliding-popup-processed .sliding-popup-top .popup-content #popup-buttons {
      display: none; }
  body.sliding-popup-processed .sliding-popup-top .agreed {
    display: none; }
body.sliding-popup-processed .cookie-opt-in p {
  margin-bottom: 15px; }
body.sliding-popup-processed .cookie-opt-in table th.setting-analytics {
  text-align: center; }
body.sliding-popup-processed .cookie-opt-in table th.setting-external {
  text-align: center; }
body.sliding-popup-processed .cookie-opt-in table th .form-item ul li {
  float: none;
  margin: 0; }
  body.sliding-popup-processed .cookie-opt-in table th .form-item ul li label {
    display: inline;
    margin: 0; }
body.sliding-popup-processed .cookie-opt-in table td.setting-analytics {
  text-align: center; }
body.sliding-popup-processed .cookie-opt-in table td.setting-external {
  text-align: center; }
body.sliding-popup-processed .cookie-opt-in table thead th em {
  display: block; }
body.sliding-popup-processed .cookie-opt-in table thead th > div {
  position: relative;
  height: 150px; }
  body.sliding-popup-processed .cookie-opt-in table thead th > div .form-item {
    position: absolute;
    bottom: 5px;
    left: 50%;
    margin-left: -18px; }
body.sliding-popup-processed .cookie-opt-in table thead .icon {
  display: block;
  width: 75px;
  height: 69px;
  margin: 0 auto;
  background: url(../../../images/icons/cookie-opt-in-table-header-icons.png) 0 0 no-repeat; }
body.sliding-popup-processed .cookie-opt-in table thead .setting-analytics .icon {
  background-position: -75px 0; }
body.sliding-popup-processed .cookie-opt-in table thead .setting-external .icon {
  background-position: -150px 0; }
body.sliding-popup-processed .cookie-opt-in table tbody .check-yes {
  text-indent: -9999px;
  background: url(../../../images/icons/check-medium.png) center center no-repeat; }
body.sliding-popup-processed .cookie-opt-in table tbody .check-no {
  text-indent: -9999px;
  background: url(../../../images/icons/cross-medium.png) center center no-repeat; }
body.sliding-popup-processed .ui-widget {
  font-family: 'senticosansdtlight', Arial, Verdana, sans-serif, Arial, Verdana, sans-serif;
  font-size: 18px;
  line-height: 23px;
  z-index: 10000; }
body.sliding-popup-processed .ui-widget-overlay {
  z-index: 10000;
  background: rgba(0, 0, 0, 0.3);
  opacity: 1; }
body.sliding-popup-processed .ui-widget-content a {
  color: #007ac7; }

#sliding-popup {
  display: none !important; }

/************** Skin 1 *********************/
.dd {
  /*display:inline-block !important;*/
  text-align: left;
  background-color: #fff;
  font-family: Arial, Helvetica, sans-serif;
  font-size: 12px;
  float: left; }

.dd .ddTitle {
  background: #f2f2f2;
  border: 1px solid #c3c3c3;
  padding: 3px;
  text-indent: 0;
  cursor: default;
  overflow: hidden;
  height: 16px; }

.dd .ddTitle span.arrow {
  background: url(dd_arrow.gif) no-repeat 0 0;
  float: right;
  display: inline-block;
  width: 16px;
  height: 16px;
  cursor: pointer; }

.dd .ddTitle span.ddTitleText {
  text-indent: 1px;
  overflow: hidden;
  line-height: 16px; }

.dd .ddTitle span.ddTitleText img {
  text-align: left;
  padding: 0 2px 0 0; }

.dd .ddTitle img.selected {
  padding: 0 3px 0 0;
  vertical-align: top; }

.dd .ddChild {
  position: absolute;
  border: 1px solid #c3c3c3;
  border-top: none;
  display: none;
  margin: 0;
  width: auto;
  overflow: auto;
  overflow-x: hidden !important;
  background-color: #ffffff; }

.dd .ddChild .opta a, .dd .ddChild .opta a:visited {
  padding-left: 10px; }

.dd .ddChild a {
  display: block;
  padding: 2px 0 2px 3px;
  text-decoration: none;
  color: #000;
  overflow: hidden;
  white-space: nowrap;
  cursor: pointer; }

.dd .ddChild a:hover {
  background-color: #66CCFF; }

.dd .ddChild a img {
  border: 0;
  padding: 0 2px 0 0;
  vertical-align: middle; }

.dd .ddChild a.selected {
  background-color: #66CCFF; }

.hidden {
  display: none; }

.dd .borderTop {
  border-top: 1px solid #c3c3c3 !important; }

.dd .noBorderTop {
  border-top: none 0  !important; }

/************** Skin 2 *********************/
.dd2 {
  /*display:inline-block !important;*/
  text-align: left;
  background-color: #fff;
  font-family: Arial, Helvetica, sans-serif;
  font-size: 12px;
  float: left; }

.dd2 .ddTitle {
  background: transparent url(../images/msDropDown.gif) no-repeat;
  padding: 0 3px;
  text-indent: 0;
  cursor: default;
  overflow: hidden;
  height: 36px; }

.dd2 .ddTitle span.arrow {
  background: transparent url(../images/icon-arrow.gif) no-repeat 0 0;
  float: right;
  display: inline-block;
  width: 27px;
  height: 27px;
  cursor: pointer;
  top: 5px;
  position: relative;
  right: 2px; }

.dd2 .ddTitle span.ddTitleText {
  text-indent: 1px;
  overflow: hidden;
  line-height: 33px;
  font-family: Georgia, "Times New Roman", Times, serif;
  font-size: 16px;
  font-weight: bold;
  color: #fff;
  _position: relative;
  _top: 4px; }

.dd2 .ddTitle span.ddTitleText img {
  text-align: left;
  padding: 0 2px 0 0; }

.dd2 .ddTitle img.selected {
  padding: 0 2px 0 0;
  vertical-align: top; }

.dd2 .ddChild {
  position: absolute;
  border: 1px solid #c3c3c3;
  border-top: none;
  display: none;
  margin: 0;
  width: auto;
  overflow: auto;
  overflow-x: hidden !important;
  background-color: #ffffff;
  font-size: 14px; }

.dd2 .ddChild .opta a, .dd2 .ddChild .opta a:visited {
  padding-left: 10px; }

.dd2 .ddChild a {
  display: block;
  padding: 3px 0 3px 3px;
  text-decoration: none;
  color: #000;
  overflow: hidden;
  white-space: nowrap;
  cursor: pointer; }

.dd2 .ddChild a:hover {
  background-color: #66CCFF; }

.dd2 .ddChild a img {
  border: 0;
  padding: 0 2px 0 0;
  vertical-align: middle; }

.dd2 .ddChild a.selected {
  background-color: #66CCFF; }

.dd2 .borderTop {
  border-top: 1px solid #c3c3c3 !important; }

.dd2 .noBorderTop {
  border-top: none 0  !important; }

/************* use sprite *****************/
.dd .ddChild a.sprite, .dd .ddChild a.sprite:visited {
  background-image: url(../icons/sprite.gif);
  background-repeat: no-repeat;
  padding-left: 24px; }

.dd .ddChild a.calendar, .dd .ddChild a.calendar:visited {
  background-position: 0 -404px; }

.dd .ddChild a.shoppingcart, .dd .ddChild a.shoppingcart:visited {
  background-position: 0 -330px; }

.dd .ddChild a.cd, .dd .ddChild a.cd:visited {
  background-position: 0 -439px; }

.dd .ddChild a.email, .dd .ddChild a.email:visited {
  background-position: 0 -256px; }

.dd .ddChild a.faq, .dd .ddChild a.faq:visited {
  background-position: 0 -183px; }

.dd .ddChild a.games, .dd .ddChild a.games:visited {
  background-position: 0 -365px; }

.dd .ddChild a.music, .dd .ddChild a.music:visited {
  background-position: 0 -146px; }

.dd .ddChild a.phone, .dd .ddChild a.phone:visited {
  background-position: 0 -109px; }

.dd .ddChild a.graph, .dd .ddChild a.graph:visited {
  background-position: 0 -73px; }

.dd .ddChild a.secured, .dd .ddChild a.secured:visited {
  background-position: 0 -37px; }

.dd .ddChild a.video, .dd .ddChild a.video:visited {
  background-position: 0 0; }

/*******************************/

/*# sourceMappingURL=data:application/json;base64, */