@charset "UTF-8";
/* Force the charset
================================================== */
/* Bower Components
================================================== */
/* Compass Mixins */
/*
 * A partial implementation of the Ruby list functions from Compass:
 * https://github.com/Compass/compass/blob/stable/lib/compass/sass_extensions/functions/lists.rb
 */
/*
 * A partial implementation of the Ruby constants functions from Compass:
 * https://github.com/Compass/compass/blob/stable/lib/compass/sass_extensions/functions/constants.rb
 */
/*
 * A partial implementation of the Ruby display functions from Compass:
 * https://github.com/Compass/compass/blob/stable/core/lib/compass/core/sass_extensions/functions/display.rb
 */
/* Breakpoint SASS */
/* EXTRA sub libs dependencies
================================================== */
/* SASS variables, functions, mixins, class and placeholders helpers */
/**
 * BREAKPOINTS for AEGON.nl current website.
 * Approach: Mobile First Method
 */
/**
 * Mobile
 *
 * Example: @include breakpoint($brk-mobile) {}
 *
 * IMPORTANT: try to avoid the breakpoint below, since the theme is already
 * mobile first and everything need to be written mobile as default.
 */
/**
 * Generic Tablet and upper
 *
 * Example: @include breakpoint($brk-tablet) {}
 */
/**
 * iPad portrait and upper
 *
 * Example: @include breakpoint($brk-ipad-portrait) {}
 */
/**
 * iPad landscape and upper
 *
 * Example: @include breakpoint($brk-ipad-landscape) {}
 */
/**
 * Large desktop and upper
 *
 * Example: @include breakpoint($brk-large-desktop) {}
 */
/**
 * Device Pixel Ratio of at least 1.5 and upper
 *
 * Example: @include breakpoint($brk-hidpi) {}
 */
/**
 * Media print
 *
 * Example: @include breakpoint($brk-print) {}
 */
/**
 * Playground example
 * Note: hide section below to reproduce CSS breakpoints
 */
/**
 * Remove the unit of a length
 * @param {Number} $number - Number to remove unit from
 * @return {Number} - Unitless number
 */
/**
 * Mixin converter for Pixel to REM, plus fallback in pixel for older browser
 * @param  {float}  $property  Name of property
 * @param  {[type]} $values... Top, Right, Bottom, Left pixel values
 * @return {css}    Property converted in REM and fallback
 *
 * Example: @include('padding', .5, .5, .15, .15);
 */
/**
 * Bubble
 * @param  {[type]} $width:            10px          [description]
 * @param  {[type]} $border:           2px           [description]
 * @param  {[type]} $quadrant:         0             [description]
 * @param  {[type]} $top:              ""            [description]
 * @param  {[type]} $right:            ""            [description]
 * @param  {[type]} $bottom:           ""            [description]
 * @param  {[type]} $left:             ""            [description]
 * @param  {[type]} $border-color:     white         [description]
 * @param  {[type]} $background-color: grey          [description]
 * @return {[type]}                    [description]
 */
/**
 * [inlineFrame description]
 * @return {[type]} [description]
 */
/* All library widgets and specific modules */
.bubble:before, .bubble:after {
  content: '';
  display: block;
  position: absolute;
  left: -20px;
  border-color: transparent #edebe5 transparent transparent;
  bottom: 20px;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 10px;
  border-radius: inherit; }
.bubble:after {
  left: -18px;
  border-color: transparent #ffffff transparent transparent; }

.lhfs_widget .tip {
  background-color: #8cd1e6;
  padding: 20px 15px;
  border-radius: 3px;
  display: none;
  margin-bottom: 18px;
  padding-left: 40px; }
  .lhfs_widget .tip.visible {
    display: block; }
  .lhfs_widget .tip .intro {
    color: #ffffff;
    font-size: 22px;
    font-family: 'senticosansdtregular', Arial, Verdana, sans-serif;
    margin-bottom: 20px; }
    .lhfs_widget .tip .intro:before {
      font-family: 'aegon_icons';
      content: "\e631";
      margin-left: -20px;
      margin-right: -5px;
      left: -10px;
      position: relative; }
.lhfs_widget form > ul, .lhfs_widget ul.products {
  margin: 30px 0;
  width: 100%; }
  .lhfs_widget form > ul li.product .description, .lhfs_widget ul.products li.product .description {
    padding-left: 40px;
    margin-bottom: 20px; }
    .lhfs_widget form > ul li.product .description:before, .lhfs_widget ul.products li.product .description:before {
      font-family: 'aegon_icons';
      color: #3395d3;
      content: "\e605";
      margin-left: -20px;
      left: -10px;
      position: relative; }
  .lhfs_widget form > ul li.product div.title, .lhfs_widget form > ul li.product span.police-number, .lhfs_widget ul.products li.product div.title, .lhfs_widget ul.products li.product span.police-number {
    font-family: 'senticosansdtmedium', Arial, Verdana, sans-serif; }
@media screen and (min-width: 641px) and (max-width: 16000px) {
  .lhfs_widget li.value {
    height: 44px; } }
.lhfs_widget li.value span.content, .lhfs_widget li.value span.help {
  display: inline; }
@media screen and (max-width: 640px) {
  .lhfs_widget li.value span.help {
    display: none; } }
.lhfs_widget li.label {
  min-height: 0; }
  @media screen and (min-width: 641px) and (max-width: 16000px) {
    .lhfs_widget li.label {
      height: inherit; } }
  .lhfs_widget li.label:after {
    content: ":"; }
.lhfs_widget label.left {
  float: left; }
.lhfs_widget input[type=text], .lhfs_widget input[type=email], .lhfs_widget input[type=number], .lhfs_widget select, .lhfs_widget .ddTitle {
  display: none; }
.lhfs_widget .edit ul.error {
  display: block;
  opacity: 0;
  height: 24px;
  min-height: 0; }
  .lhfs_widget .edit ul.error [class*='span'] {
    min-height: 0;
    line-height: 18px; }
  .lhfs_widget .edit ul.error > li {
    color: #C50B1F;
    font-size: 14px;
    margin-left: 0; }
  .lhfs_widget .edit ul.error.visible {
    opacity: 1; }
.lhfs_widget .edit li.label {
  padding-right: 55px; }
  @media screen and (max-width: 640px) {
    .lhfs_widget .edit li.label {
      text-align: left; } }
.lhfs_widget .edit li.label, .lhfs_widget .edit label {
  font-family: 'senticosansdtregular', Arial, Verdana, sans-serif;
  text-align: right; }
  .lhfs_widget .edit li.label:after, .lhfs_widget .edit label:after {
    content: ""; }
.lhfs_widget .edit li.label.required:after, .lhfs_widget .edit label.checkbox.required span.label:after {
  margin-left: 5px;
  content: "*";
  color: #C50B1F; }
.lhfs_widget .edit input[type=text], .lhfs_widget .edit input[type=email], .lhfs_widget .edit input[type=number], .lhfs_widget .edit select, .lhfs_widget .edit .ddTitle {
  display: block; }
.lhfs_widget .edit li.value span.content, .lhfs_widget .edit li.value span.help {
  display: none; }
.lhfs_widget .row-fluid [class*='span'] {
  display: inline; }
  @media screen and (max-width: 640px) {
    .lhfs_widget .row-fluid [class*='span'] {
      min-height: 5px; } }

.lhfs_widget div.payments .status span:before {
  font-family: 'aegon_icons';
  margin-right: 5px; }
.lhfs_widget div.payments .status span.open {
  color: #C50B1F; }
  .lhfs_widget div.payments .status span.open:before {
    content: "\e631"; }
.lhfs_widget div.payments .status span.paid {
  color: #49af57; }
  .lhfs_widget div.payments .status span.paid:before {
    content: "\e632"; }
.lhfs_widget div.payments > ul > li > ul, .lhfs_widget div.payments > ul > li > ul.visible {
  display: table;
  width: 100%;
  border-top: none;
  border-bottom: 1px solid #e0e0e0;
  padding: 10px 15px; }
  .lhfs_widget div.payments > ul > li > ul.header, .lhfs_widget div.payments > ul > li > ul.visible.header {
    background-color: #eeebe5;
    border-top: 1px solid #e0e0e0;
    border-bottom: none; }
    .lhfs_widget div.payments > ul > li > ul.header > li, .lhfs_widget div.payments > ul > li > ul.visible.header > li {
      font-family: 'senticosansdtmedium', Arial, Verdana, sans-serif; }
  .lhfs_widget div.payments > ul > li > ul > li:nth-of-type(1), .lhfs_widget div.payments > ul > li > ul.visible > li:nth-of-type(1) {
    width: 200px; }
  .lhfs_widget div.payments > ul > li > ul > li:nth-of-type(2), .lhfs_widget div.payments > ul > li > ul.visible > li:nth-of-type(2) {
    width: 120px; }
  .lhfs_widget div.payments > ul > li > ul > li:nth-of-type(4), .lhfs_widget div.payments > ul > li > ul.visible > li:nth-of-type(4) {
    width: 120px; }
  .lhfs_widget div.payments > ul > li > ul > li:nth-of-type(5), .lhfs_widget div.payments > ul > li > ul.visible > li:nth-of-type(5) {
    width: 20px; }
.lhfs_widget div.payments .method {
  color: #e0e0e0; }
.lhfs_widget div.payments .details {
  background-color: transparent; }
  .lhfs_widget div.payments .details:before {
    font-family: 'aegon_icons';
    content: "\e62d";
    color: #edebe5;
    background-color: transparent; }
.lhfs_widget div.payments .amount:before {
  content: "â‚¬"; }
.lhfs_widget div.payments .date {
  color: #3395d3; }

.inline_alert {
  padding: 20px 15px;
  border-radius: 3px;
  display: none;
  margin-bottom: 18px;
  display: block;
  border: 1px solid #E6CECD;
  background-color: #f3e7e6; }
  .inline_alert.visible {
    display: block; }
  .inline_alert hr {
    height: 1px;
    color: #E6CECD;
    width: 100%; }
  .inline_alert ul.payments {
    margin: 15px -15px; }
    .inline_alert ul.payments button.white {
      background-color: transparent; }
      .inline_alert ul.payments button.white:before {
        background-color: transparent; }
    .inline_alert ul.payments > li > ul {
      padding: 10px 15px;
      border: 1px solid #E6CECD;
      border-width: 1px 0 0 0;
      width: 100%;
      display: table; }
      .inline_alert ul.payments > li > ul > li {
        float: none; }
        .inline_alert ul.payments > li > ul > li:first-of-type:last-of-type {
          text-align: right; }
        .inline_alert ul.payments > li > ul > li:nth-of-type(2) {
          width: 120px; }
          .inline_alert ul.payments > li > ul > li:nth-of-type(2) span.debit {
            font-family: 'senticosansdtmedium', Arial, Verdana, sans-serif; }
            .inline_alert ul.payments > li > ul > li:nth-of-type(2) span.debit:before {
              content: "â‚¬"; }
        .inline_alert ul.payments > li > ul > li:nth-of-type(3) {
          width: 80px; }
        .inline_alert ul.payments > li > ul > li:nth-of-type(4) {
          width: 120px; }
  .inline_alert h3 {
    color: #1d1d1b;
    font-weight: bold; }

.help {
  margin: 0;
  margin-right: 10px;
  display: inline-block;
  float: right;
  position: relative; }
  .help[title=''] {
    display: none; }
  .help.dialog {
    z-index: 5;
    background-color: #99CAE9;
    display: block;
    position: absolute;
    padding: 18px;
    max-width: 400px;
    border-radius: 3px; }
    .help.dialog:before, .help.dialog:after {
      content: '';
      display: block;
      position: absolute;
      top: -20px;
      border-color: transparent transparent white transparent;
      left: 200px;
      width: 0;
      height: 0;
      border-style: solid;
      border-width: 10px;
      border-radius: inherit; }
    .help.dialog:after {
      top: -18px;
      border-color: transparent transparent #99CAE9 transparent; }
  .help:before {
    font-family: 'aegon_icons';
    font-size: 16px;
    content: "\e62f";
    position: absolute; }

ul.actions {
  text-align: left; }
  ul.actions li {
    float: none;
    display: block; }
    ul.actions li.edit {
      display: none; }
  ul.actions.edit {
    text-align: right; }
    ul.actions.edit li {
      text-align: left; }
      ul.actions.edit li.edit {
        padding-left: 0;
        display: block; }
        ul.actions.edit li.edit div.disabler {
          z-index: 2;
          position: relative;
          left: 0;
          top: -38px;
          background-color: white;
          opacity: 0.5;
          width: 100%;
          height: 38px;
          display: block; }
      ul.actions.edit li.view {
        display: none; }
      ul.actions.edit li button {
        position: relative;
        z-index: 3; }
        ul.actions.edit li button.disabled {
          z-index: 1; }

li.right {
  text-align: right; }

ul.horizontal {
  display: table;
  margin: 0;
  padding: 1px 0;
  display: none; }
  ul.horizontal.row-fluid {
    height: 50px; }
  @media screen and (max-width: 640px) {
    ul.horizontal {
      margin-bottom: 30px; } }
  ul.horizontal.clear {
    width: 100%;
    height: 1px;
    margin: 0 0 -1px;
    clear: both; }
  ul.horizontal.visible {
    display: block; }
  ul.horizontal li {
    display: table-cell; }
    ul.horizontal li.label {
      font-family: 'senticosansdtregular', Arial, Verdana, sans-serif; }
    ul.horizontal li.value {
      font-family: 'senticosansdtlight', Arial, Verdana, sans-serif; }

/**
 * Added by Rocco: Please check the explanation wrote in layout/_grid.scss at 
 * line 100, related to this specific declaration below, that helps to visuaize 
 * your widget in the right way.
 */
.lhfs_widget .product.data.span12, .lhfs_widget .row-fluid li.value[class*='span'] {
  margin-left: 0; }

.personal_details_widget ul.horizontal {
  display: block; }
@media screen and (min-width: 641px) and (max-width: 16000px) {
  .personal_details_widget li.value {
    line-height: 100%;
    min-height: 44px; } }
.personal_details_widget li.value span.content, .personal_details_widget li.value span.help {
  display: inline; }
@media screen and (max-width: 640px) {
  .personal_details_widget li.value span.help {
    display: none; } }
.personal_details_widget li.label {
  min-height: 0; }
  .personal_details_widget li.label:after {
    content: ":"; }
.personal_details_widget label.left {
  float: left; }
.personal_details_widget .edit ul.error {
  display: block;
  opacity: 0;
  height: 24px;
  min-height: 0; }
  .personal_details_widget .edit ul.error [class*='span'] {
    min-height: 0;
    line-height: 18px; }
  .personal_details_widget .edit ul.error > li {
    color: #C50B1F;
    font-size: 14px;
    margin-left: 0; }
  .personal_details_widget .edit ul.error.visible {
    opacity: 1; }
.personal_details_widget .edit li.label {
  text-align: right; }
  @media screen and (max-width: 640px) {
    .personal_details_widget .edit li.label {
      text-align: left; } }
.personal_details_widget .edit li.label, .personal_details_widget .edit label {
  font-family: 'senticosansdtregular', Arial, Verdana, sans-serif; }
  .personal_details_widget .edit li.label:after, .personal_details_widget .edit label:after {
    content: ""; }
.personal_details_widget .edit li.label.required:after, .personal_details_widget .edit label.checkbox.required span.label:after {
  margin-left: 5px;
  content: "*";
  color: #C50B1F; }
.personal_details_widget ul.horizontal.row-fluid {
  height: auto;
  margin-bottom: 20px; }
.personal_details_widget .row-fluid [class*='span'] {
  display: inline; }
  @media screen and (max-width: 640px) {
    .personal_details_widget .row-fluid [class*='span'] {
      min-height: 5px; } }
.personal_details_widget .NL, .personal_details_widget .world {
  display: none; }
  .personal_details_widget .NL.visible, .personal_details_widget .world.visible {
    display: block; }
.personal_details_widget .residential_address {
  bottom-margin: 40px; }

.contract_overview_widget ul {
  padding: 0; }
  .contract_overview_widget ul li {
    padding: 2px 0; }
    .contract_overview_widget ul li.category {
      border-bottom: 1px solid #aaa;
      padding: 30px 10px;
      padding: 1.875rem 0.625rem;
      margin: 10px 10px;
      margin: 0.625rem 0.625rem; }
      .contract_overview_widget ul li.category:first-child {
        border-top: 1px solid #aaa; }
      .contract_overview_widget ul li.category:last-child {
        border-bottom: none; }
    .contract_overview_widget ul li.arrow {
      margin: 0;
      background-repeat: no-repeat;
      background-color: transparent;
      background-position: 2px center;
      padding-left: 18px; }
      .contract_overview_widget ul li.arrow:before {
        display: none; }
  .contract_overview_widget ul.horizontal {
    display: block;
    width: 100%;
    margin-bottom: 0;
    padding: 6px 0; }
    .contract_overview_widget ul.horizontal li {
      float: none;
      display: block;
      vertical-align: top;
      padding: 2px 19px;
      padding: 0.125rem 1.1875rem; }
      .contract_overview_widget ul.horizontal li:first-child {
        width: 100%; }
    .contract_overview_widget ul.horizontal.type {
      margin-bottom: 30px; }
  .contract_overview_widget ul.horizontal.header {
    display: none; }
.contract_overview_widget .label {
  color: #3395d3;
  font-weight: bold; }
.contract_overview_widget .value:not(.title) {
  font-family: 'senticosansdtregular', Arial, Verdana, sans-serif; }
.contract_overview_widget .product.title {
  display: none; }
.contract_overview_widget .value.title {
  display: none; }
.contract_overview_widget .messages {
  margin: 10px 10px 35px;
  margin: 0.625rem 0.625rem 2.1875rem; }
.contract_overview_widget h2 {
  position: relative; }
  .contract_overview_widget h2[class*="icon-"]:before {
    position: absolute;
    top: 50%;
    left: 0;
    margin-left: -40px;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
    font-size: 25px;
    font-weight: normal;
    -webkit-font-smoothing: antialiased; }

@media only screen and (min-width: 641px) {
  .contract_overview_widget ul.horizontal {
    width: 100%;
    padding: 0; }
    .contract_overview_widget ul.horizontal li {
      display: inline-block;
      padding: 8px 19px;
      padding: 0.5rem 1.1875rem; }
      .contract_overview_widget ul.horizontal li:first-child {
        width: 60%; }
  .contract_overview_widget ul.horizontal.header {
    display: block; }
    .contract_overview_widget ul.horizontal.header li {
      padding: 2px 19px;
      padding: 0.125rem 1.1875rem; }
      .contract_overview_widget ul.horizontal.header li:first-child {
        padding-left: 0; }
  .contract_overview_widget ul li {
    padding: 8px 0px;
    padding: 0.5rem 0rem; }
    .contract_overview_widget ul li span.value {
      padding: 0; }
  .contract_overview_widget .product.title {
    display: block;
    padding: 10px 0;
    font-weight: normal; }
  .contract_overview_widget .value.title {
    display: block;
    padding: 10px 0;
    font-weight: normal; } }

.my_documents_widget article {
  margin: 0px 0px;
  margin: 0rem 0rem;
  border-bottom-style: solid;
  border-bottom-color: #e0e0e0;
  border-bottom-width: 1px;
  border-bottom-width: 0.0625rem; }
  .my_documents_widget article:first-of-type {
    margin-top: 30px;
    margin-top: 1.875rem;
    border-top-style: solid;
    border-top-color: #e0e0e0;
    border-top-width: 1px;
    border-top-width: 0.0625rem; }
  .my_documents_widget article:last-of-type {
    border-bottom-style: none; }
  .my_documents_widget article > dl {
    display: block;
    padding: 0px 20px;
    padding: 0rem 1.25rem;
    overflow: hidden;
    transition: max-height .2s ease;
    margin: 0;
    max-height: 0; }
  .my_documents_widget article.open > dl {
    height: 100%;
    max-height: 1000em;
    transition: max-height 2s ease-in; }
  .my_documents_widget article.open h2:after {
    -webkit-transform: rotate(-90deg);
    -ms-transform: rotate(-90deg);
    transform: rotate(-90deg); }
.my_documents_widget h2 {
  position: relative;
  font-size: 30px;
  font-size: 1.875rem;
  margin: 0px;
  margin: 0rem;
  padding: 20px 0px 20px 15px;
  padding: 1.25rem 0rem 1.25rem 0.9375rem;
  line-height: 60px;
  line-height: 3.75rem;
  font-weight: bold;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }
  .my_documents_widget h2:before {
    display: inline-block;
    font-size: 25px;
    font-size: 1.5625rem;
    margin: 0px 20px 0px 0px;
    margin: 0rem 1.25rem 0rem 0rem;
    font-weight: normal;
    -webkit-font-smoothing: antialiased; }
  .my_documents_widget h2:after {
    display: inline-block;
    font-size: 15px;
    font-size: 0.9375rem;
    position: absolute;
    right: 0;
    margin-right: 30px;
    margin-right: 1.875rem;
    font-family: 'aegon_icons';
    content: '\e600';
    font-weight: normal;
    -webkit-font-smoothing: antialiased;
    transition: -webkit-transform .2s ease;
    transition: transform .2s ease;
    -webkit-transform: rotate(90deg);
    -ms-transform: rotate(90deg);
    transform: rotate(90deg); }
.my_documents_widget dl.row-fluid > dt {
  display: none; }
.my_documents_widget dl.row-fluid dd:first-child a {
  font-family: 'senticosansdtregular', Arial, Verdana, sans-serif; }
  .my_documents_widget dl.row-fluid dd:first-child a:before {
    display: inline;
    font-size: 10px;
    font-size: 0.625rem;
    line-height: inherit;
    vertical-align: middle; }
.my_documents_widget .icon-pdf:before {
  font-size: 25px;
  font-size: 1.5625rem; }

@media only screen and (min-width: 641px) {
  .my_documents_widget article {
    margin: 30px 0px;
    margin: 1.875rem 0rem; }
    .my_documents_widget article:first-of-type {
      margin-top: 0;
      border-top: none; }
    .my_documents_widget article > dl {
      display: block;
      max-height: inherit;
      padding: 10px 0px;
      padding: 0.625rem 0rem; }
  .my_documents_widget h2 {
    font-size: 40px;
    font-size: 2.5rem;
    padding: 0px 0px;
    padding: 0rem 0rem;
    margin: 5px 0px 20px 0px;
    margin: 0.3125rem 0rem 1.25rem 0rem;
    line-height: 40px;
    line-height: 2.5rem;
    font-weight: normal;
    cursor: default; }
    .my_documents_widget h2:before {
      position: absolute;
      top: 50%;
      left: 0;
      -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
      transform: translateY(-50%);
      margin: 0px 0px 0px -40px;
      margin: 0rem 0rem 0rem -2.5rem; }
    .my_documents_widget h2:after {
      display: none; }
  .my_documents_widget dl.row-fluid > dt {
    display: block;
    font-size: 17px;
    font-size: 1.0625rem; }
  .my_documents_widget dl.row-fluid dd:first-child a:before {
    padding-right: 10px;
    padding-right: 0.625rem; } }

.communication_preferences dl.table.row-fluid > dt {
  position: relative;
  display: block;
  min-width: 100%;
  font-family: 'senticosansdtregular', Arial, Verdana, sans-serif;
  padding-right: 22px;
  padding-right: 1.375rem; }
.communication_preferences dl.table.row-fluid > dd {
  display: block;
  margin-left: 0; }
.communication_preferences span.icon-questionmark {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: default;
  font-family: 'aegon_icons';
  font-size: 16px;
  font-size: 1rem;
  color: #00304c; }
.communication_preferences span[tooltip] {
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  width: 20px;
  width: 1.25rem;
  text-align: center; }
  .communication_preferences span[tooltip]:before {
    visibility: hidden;
    opacity: 0;
    position: absolute;
    top: 15px;
    top: 0.9375rem;
    left: 0%;
    display: block;
    width: 0;
    height: 0;
    content: '';
    border-style: solid;
    border-width: 10px;
    border-width: 0.625rem;
    border-color: transparent transparent #99CAE9 transparent;
    transition: .1s all .3s; }
  .communication_preferences span[tooltip]:after {
    visibility: hidden;
    opacity: 0;
    position: absolute;
    top: 33px;
    top: 2.0625rem;
    right: -10px;
    right: -0.625rem;
    font-family: 'senticosansdtlight', Arial, Verdana, sans-serif;
    content: attr(tooltip);
    font-size: 14px;
    color: #1d1d1b;
    text-align: left;
    padding: 12px;
    padding: 0.75rem;
    display: block;
    width: 300px;
    z-index: 5;
    background-color: #99CAE9;
    border-radius: 3px;
    border-radius: 0.1875rem;
    transition: .1s all .3s; }
  .communication_preferences span[tooltip]:hover:before, .communication_preferences span[tooltip]:hover:after {
    visibility: visible;
    opacity: 1;
    transition: .1s all 0s; }
.communication_preferences label.checkbox {
  display: block;
  margin-bottom: 10px;
  margin-bottom: 0.625rem; }
  .communication_preferences label.checkbox > input[type='checkbox'] + span.checkbox {
    top: 0;
    left: 0; }
.communication_preferences button.edit.right {
  line-height: inherit; }

@media only screen and (min-width: 641px) {
  .communication_preferences dl.table.row-fluid > dt, .communication_preferences dl.table.row-fluid > dd {
    display: table-cell;
    min-width: inherit; }
    .communication_preferences dl.table.row-fluid > dt.top span[tooltip], .communication_preferences dl.table.row-fluid > dd.top span[tooltip] {
      top: 0;
      margin-top: 0; }
  .communication_preferences dl.table.row-fluid > dd {
    padding-left: 16px;
    padding-left: 1rem; }
  .communication_preferences span[tooltip] {
    top: 50%;
    margin-top: -12.5px;
    margin-top: -0.78125rem; }
    .communication_preferences span[tooltip]:before {
      top: 15px;
      left: 0%; }
    .communication_preferences span[tooltip]:after {
      left: -150px;
      top: 33px; } }

/* All library widgets and specific modules */
.user_detail_widget {
  display: none;
  float: right;
  z-index: 0;
  /**
   * End animation with jQuery support
   */ }
  .user_detail_widget .inplace {
    position: relative;
    display: inline-block;
    float: right;
    margin: 0;
    height: 36px; }
    .user_detail_widget .inplace .btn-login-loggedin {
      z-index: 2;
      position: relative;
      top: 0px;
      right: 0px; }
  .user_detail_widget > .text {
    display: none; }
  .user_detail_widget label {
    font-weight: normal; }
  .user_detail_widget input#UDW_dd_show {
    display: none; }
    .user_detail_widget input#UDW_dd_show:checked ~ .dropdown {
      display: block; }
    .user_detail_widget input#UDW_dd_show:checked ~ .btn-login-loggedin {
      border-bottom-color: #ffffff; }
      .user_detail_widget input#UDW_dd_show:checked ~ .btn-login-loggedin:after {
        -webkit-transform: rotate(180deg);
        -ms-transform: rotate(180deg);
        transform: rotate(180deg); }
  .user_detail_widget .dropdown {
    display: none;
    z-index: 1;
    position: absolute;
    top: auto;
    right: 0;
    margin-top: -1px;
    margin-top: -0.0625rem;
    width: 280px;
    width: 17.5rem;
    border-radius: 2px;
    border-radius: 0.125rem;
    background-color: #ffffff;
    border: 1px solid #e0e0e0;
    box-shadow: 0 1px 0px rgba(0, 0, 0, 0.3); }
    .user_detail_widget .dropdown .text {
      text-align: left;
      white-space: normal;
      text-overflow: initial;
      overflow: initial; }
      .user_detail_widget .dropdown .text p {
        display: block;
        padding: 0px 12px;
        padding: 0rem 0.75rem;
        margin: 18px 0px;
        margin: 1.125rem 0rem; }
      .user_detail_widget .dropdown .text p.name {
        padding: 0px 20px;
        padding: 0rem 1.25rem;
        white-space: nowrap;
        color: #49af57; }
        .user_detail_widget .dropdown .text p.name:before {
          content: "\e636";
          font-family: 'aegon_icons';
          display: inline-block;
          font-size: 23px;
          font-size: 1.4375rem;
          margin-right: 12px;
          margin-right: 0.75rem;
          -webkit-transform: translateY(3px);
          -ms-transform: translateY(3px);
          transform: translateY(3px); }
      .user_detail_widget .dropdown .text .action {
        padding: 0px 12px;
        padding: 0rem 0.75rem;
        white-space: nowrap; }
  .user_detail_widget .highlight {
    display: block;
    background-color: #49af57; }
    .user_detail_widget .highlight.has-been-shown.desktop, .user_detail_widget .highlight.has-been-shown.mobile {
      display: none; }
    .user_detail_widget .highlight.desktop {
      display: none;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: 0;
      padding: 23px 0px;
      padding: 1.4375rem 0rem;
      -webkit-animation: slidingHighlightOnTop 1s 1 3s forwards;
      animation: slidingHighlightOnTop 1s 1 3s forwards; }
    .user_detail_widget .highlight.mobile {
      font-size: 16px;
      font-size: 1rem;
      margin: 0px 12px;
      margin: 0rem 0.75rem;
      overflow: hidden;
      background-color: transparent;
      -webkit-animation: slidingHighlightOnTopMobile 1s 1 3s forwards;
      animation: slidingHighlightOnTopMobile 1s 1 3s forwards;
      max-height: 500px; }
      .user_detail_widget .highlight.mobile .text {
        padding: 0;
        background-color: #49af57; }
        .user_detail_widget .highlight.mobile .text p {
          padding: 12px;
          padding: 0.75rem;
          margin-bottom: 0;
          color: #ffffff; }
    .user_detail_widget .highlight strong {
      font-family: 'senticosansdtregular', Arial, Verdana, sans-serif;
      font-weight: 300; }
  .user_detail_widget .btn-login-loggedin {
    z-index: 2;
    background-color: #ffffff;
    margin-bottom: -1px;
    padding: 0px 10px 1px 10px;
    padding: 0rem 0.625rem 0.0625rem 0.625rem;
    line-height: 36px;
    line-height: 2.25rem;
    height: auto;
    padding-bottom: 6px;
    cursor: pointer;
    border-radius: 2px;
    border-radius: 0.125rem;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    outline: 0;
    font-family: 'senticosansdtregular', Arial, Verdana, sans-serif;
    font-size: 16px;
    font-size: 1rem;
    border-width: 1px;
    border-style: solid;
    border-color: #e0e0e0;
    border-bottom-color: transparent;
    color: #49af57; }
    .user_detail_widget .btn-login-loggedin:after {
      font-family: 'aegon_icons';
      font-size: 12px;
      font-size: 0.75rem;
      content: "\e630";
      margin-left: 6px;
      margin-left: 0.375rem; }
    .user_detail_widget .btn-login-loggedin.tap {
      border-bottom-color: #e0e0e0;
      padding-bottom: 0; }
      .user_detail_widget .btn-login-loggedin.tap ~ .dropdown {
        display: none; }
    .user_detail_widget .btn-login-loggedin.off, .user_detail_widget .btn-login-loggedin.off:after {
      -webkit-animation: none;
      animation: none;
      background-color: #ffffff; }
    .user_detail_widget .btn-login-loggedin:hover {
      opacity: initial; }
  .user_detail_widget.processed .highlight.desktop {
    display: none; }
  .user_detail_widget.processed .highlight.mobile {
    display: none; }
  .user_detail_widget.processed > .text {
    opacity: 1; }
  .user_detail_widget.processed .btn-login-loggedin, .user_detail_widget.processed .btn-login-loggedin:after {
    -webkit-animation: none;
    animation: none; }

html.lt-ie9 .user_detail_widget > .text {
  opacity: 1 !important; }

body.section-mijnaegon .myaegon {
  display: none; }

body.shw-widgets-logged-in header.header .login-link-wrapper, body.shw-widgets-logged-in .link-logged-in a {
  display: none; }
body.shw-widgets-logged-in .user_detail_widget, body.shw-widgets-logged-in .link-logged-in .link-alternative a {
  display: block; }

.link-alternative a {
  display: none; }

@media only screen and (min-width: 641px) {
  .user_detail_widget > .text {
    line-height: 44px;
    line-height: 2.75rem; }
  .user_detail_widget .text p.name {
    display: inline;
    padding: 0px 25px 0px 0px;
    padding: 0rem 1.5625rem 0rem 0rem;
    color: #49af57; }
  .user_detail_widget .dropdown {
    display: none; }
    .user_detail_widget .dropdown .text p.name {
      display: none; }
  .user_detail_widget .highlight.desktop {
    display: block; }
    .user_detail_widget .highlight.desktop .text {
      margin: 0;
      text-align: left;
      line-height: 44px;
      line-height: 2.75rem;
      padding-right: 170px;
      padding-right: 10.625rem;
      margin-left: 7.3%;
      margin-right: 7.3%;
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden;
      color: #ffffff; }
      .user_detail_widget .highlight.desktop .text .welcome {
        font-family: 'senticosansdtregular', Arial, Verdana, sans-serif; }
      .user_detail_widget .highlight.desktop .text p {
        display: inline; }
  .user_detail_widget .highlight.mobile {
    display: none; }
  .user_detail_widget .btn-login-loggedin {
    display: inline-block;
    padding: 0px 13px 2px 13px;
    padding: 0rem 0.8125rem 0.125rem 0.8125rem;
    line-height: 36px;
    line-height: 2.25rem;
    font-size: inherit;
    border-bottom-color: #e0e0e0;
    -webkit-animation: buttonLoginToDefault 4s normal 0s forwards;
    animation: buttonLoginToDefault 4s normal 0s forwards; }
    .user_detail_widget .btn-login-loggedin:before {
      content: "\e636";
      font-family: 'aegon_icons';
      display: inline-block;
      font-size: 23px;
      font-size: 1.4375rem;
      margin-right: 12px;
      margin-right: 0.75rem;
      -webkit-transform: translateY(3px);
      -ms-transform: translateY(3px);
      transform: translateY(3px); }
    .user_detail_widget .btn-login-loggedin:after {
      display: inline-block;
      -webkit-animation: buttonAfterLoginToDefault 4s normal 0s forwards;
      animation: buttonAfterLoginToDefault 4s normal 0s forwards; }
    .user_detail_widget .btn-login-loggedin.tap {
      background-color: #ffffff;
      border-bottom-color: transparent;
      padding-bottom: 0px; }
      .user_detail_widget .btn-login-loggedin.tap ~ .dropdown {
        display: block; }
    .user_detail_widget .btn-login-loggedin.ieChangeColors {
      color: #ffffff; }
      .user_detail_widget .btn-login-loggedin.ieChangeColors:after {
        border-color: #ffffff; } }

@media only screen and (min-width: 901px) {
  .user_detail_widget > .text {
    float: left;
    display: inline-block;
    opacity: 1;
    transition: opacity .15s; } }

@-webkit-keyframes buttonLoginToDefault {
  0%, 75% {
    border-color: #ffffff;
    color: #ffffff; }

  100% {
    border-color: #e0e0e0;
    color: #49af57; } }

@keyframes buttonLoginToDefault {
  0%, 75% {
    border-color: #ffffff;
    color: #ffffff; }

  100% {
    border-color: #e0e0e0;
    color: #49af57; } }

@-webkit-keyframes buttonAfterLoginToDefault {
  0%, 75% {
    border-color: #ffffff; }

  100% {
    border-color: #49af57; } }

@keyframes buttonAfterLoginToDefault {
  0%, 75% {
    border-color: #ffffff; }

  100% {
    border-color: #49af57; } }

@-webkit-keyframes slidingHighlightOnTop {
  from {
    -webkit-transform: translateY(0%);
    transform: translateY(0%); }

  to {
    -webkit-transform: translateY(-120%);
    transform: translateY(-120%); } }

@keyframes slidingHighlightOnTop {
  from {
    -webkit-transform: translateY(0%);
    transform: translateY(0%); }

  to {
    -webkit-transform: translateY(-120%);
    transform: translateY(-120%); } }

@-webkit-keyframes slidingHighlightOnTopMobile {
  from {
    max-height: 500px; }

  to {
    max-height: 0px; } }

@keyframes slidingHighlightOnTopMobile {
  from {
    max-height: 500px; }

  to {
    max-height: 0px; } }

.hide-if-shw-loggedout {
  display: none; }

.shw-widgets-logged-in .show-if-shw-loggedin, .shw-widgets-logged-in .hide-if-shw-loggedout {
  display: inline; }
  .shw-widgets-logged-in .show-if-shw-loggedin.inline, .shw-widgets-logged-in .hide-if-shw-loggedout.inline {
    display: inline; }
  .shw-widgets-logged-in .show-if-shw-loggedin.inline-block, .shw-widgets-logged-in .hide-if-shw-loggedout.inline-block {
    display: inline-block; }
  .shw-widgets-logged-in .show-if-shw-loggedin.block, .shw-widgets-logged-in .hide-if-shw-loggedout.block {
    display: block; }
.shw-widgets-logged-in .hide-if-shw-loggedin {
  display: none; }

/* Groups of toolkit core files
================================================== */
.sliding-popup-top {
  display: none; }


/*# sourceMappingURL=data:application/json;base64, */