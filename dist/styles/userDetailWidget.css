/* Bower Components
================================================== */
/* Compass Mixins */
/*
 * A partial implementation of the Ruby list functions from Compass:
 * https://github.com/Compass/compass/blob/stable/lib/compass/sass_extensions/functions/lists.rb
 */
/*
 * A partial implementation of the Ruby constants functions from Compass:
 * https://github.com/Compass/compass/blob/stable/lib/compass/sass_extensions/functions/constants.rb
 */
/*
 * A partial implementation of the Ruby display functions from Compass:
 * https://github.com/Compass/compass/blob/stable/core/lib/compass/core/sass_extensions/functions/display.rb
 */
/* Breakpoint SASS */
/* EXTRA sub libs dependencies
================================================== */
/* SASS variables, functions, mixins, class and placeholders helpers */
/**
 * BREAKPOINTS for AEGON.nl current website.
 * Approach: Mobile First Method
 */
/**
 * Mobile
 *
 * Example: @include breakpoint($brk-mobile) {}
 *
 * IMPORTANT: try to avoid the breakpoint below, since the theme is already
 * mobile first and everything need to be written mobile as default.
 */
/**
 * Generic Tablet and upper
 *
 * Example: @include breakpoint($brk-tablet) {}
 */
/**
 * iPad portrait and upper
 *
 * Example: @include breakpoint($brk-ipad-portrait) {}
 */
/**
 * iPad landscape and upper
 *
 * Example: @include breakpoint($brk-ipad-landscape) {}
 */
/**
 * Large desktop and upper
 *
 * Example: @include breakpoint($brk-large-desktop) {}
 */
/**
 * Device Pixel Ratio of at least 1.5 and upper
 *
 * Example: @include breakpoint($brk-hidpi) {}
 */
/**
 * Media print
 *
 * Example: @include breakpoint($brk-print) {}
 */
/**
 * Playground example
 * Note: hide section below to reproduce CSS breakpoints
 */
/**
 * Remove the unit of a length
 * @param {Number} $number - Number to remove unit from
 * @return {Number} - Unitless number
 */
/**
 * Mixin converter for Pixel to REM, plus fallback in pixel for older browser
 * @param  {float}  $property  Name of property
 * @param  {[type]} $values... Top, Right, Bottom, Left pixel values
 * @return {css}    Property converted in REM and fallback
 *
 * Example: @include('padding', .5, .5, .15, .15);
 */
/**
 * Bubble
 * @param  {[type]} $width:            10px          [description]
 * @param  {[type]} $border:           2px           [description]
 * @param  {[type]} $quadrant:         0             [description]
 * @param  {[type]} $top:              ""            [description]
 * @param  {[type]} $right:            ""            [description]
 * @param  {[type]} $bottom:           ""            [description]
 * @param  {[type]} $left:             ""            [description]
 * @param  {[type]} $border-color:     white         [description]
 * @param  {[type]} $background-color: grey          [description]
 * @return {[type]}                    [description]
 */
/**
 * [inlineFrame description]
 * @return {[type]} [description]
 */
/* All library widgets and specific modules */
.hide-if-shw-loggedout {
  display: none; }

.shw-widgets-logged-in .show-if-shw-loggedin, .shw-widgets-logged-in .hide-if-shw-loggedout {
  display: inline; }
  .shw-widgets-logged-in .show-if-shw-loggedin.inline, .shw-widgets-logged-in .hide-if-shw-loggedout.inline {
    display: inline; }
  .shw-widgets-logged-in .show-if-shw-loggedin.inline-block, .shw-widgets-logged-in .hide-if-shw-loggedout.inline-block {
    display: inline-block; }
  .shw-widgets-logged-in .show-if-shw-loggedin.block, .shw-widgets-logged-in .hide-if-shw-loggedout.block {
    display: block; }
.shw-widgets-logged-in .hide-if-shw-loggedin {
  display: none; }

.user_detail_widget {
  display: none;
  float: right;
  z-index: 0;
  /**
   * End animation with jQuery support
   */ }
  .user_detail_widget .inplace {
    position: relative;
    display: inline-block;
    float: right;
    margin: 0;
    height: 36px; }
    .user_detail_widget .inplace .btn-login-loggedin {
      z-index: 2;
      position: relative;
      top: 0px;
      right: 0px; }
  .user_detail_widget > .text {
    display: none; }
  .user_detail_widget label {
    font-weight: normal; }
  .user_detail_widget input#UDW_dd_show {
    display: none; }
    .user_detail_widget input#UDW_dd_show:checked ~ .dropdown {
      display: block; }
    .user_detail_widget input#UDW_dd_show:checked ~ .btn-login-loggedin {
      border-bottom-color: #ffffff; }
      .user_detail_widget input#UDW_dd_show:checked ~ .btn-login-loggedin:after {
        -webkit-transform: rotate(180deg);
        -ms-transform: rotate(180deg);
        transform: rotate(180deg); }
  .user_detail_widget .dropdown {
    display: none;
    z-index: 1;
    position: absolute;
    top: auto;
    right: 0;
    margin-top: -1px;
    margin-top: -0.0625rem;
    width: 280px;
    width: 17.5rem;
    border-radius: 2px;
    border-radius: 0.125rem;
    background-color: #ffffff;
    border: 1px solid #e0e0e0;
    box-shadow: 0 1px 0px rgba(0, 0, 0, 0.3); }
    .user_detail_widget .dropdown .text {
      text-align: left;
      white-space: normal;
      text-overflow: initial;
      overflow: initial; }
      .user_detail_widget .dropdown .text p {
        display: block;
        padding: 0px 12px;
        padding: 0rem 0.75rem;
        margin: 18px 0px;
        margin: 1.125rem 0rem; }
      .user_detail_widget .dropdown .text p.name {
        padding: 0px 20px;
        padding: 0rem 1.25rem;
        white-space: nowrap;
        color: #49af57; }
        .user_detail_widget .dropdown .text p.name:before {
          content: "\e636";
          font-family: 'aegon_icons';
          display: inline-block;
          font-size: 23px;
          font-size: 1.4375rem;
          margin-right: 12px;
          margin-right: 0.75rem;
          -webkit-transform: translateY(3px);
          -ms-transform: translateY(3px);
          transform: translateY(3px); }
      .user_detail_widget .dropdown .text .action {
        padding: 0px 12px;
        padding: 0rem 0.75rem;
        white-space: nowrap; }
  .user_detail_widget .highlight {
    display: block;
    background-color: #49af57; }
    .user_detail_widget .highlight.has-been-shown.desktop, .user_detail_widget .highlight.has-been-shown.mobile {
      display: none; }
    .user_detail_widget .highlight.desktop {
      display: none;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: 0;
      padding: 23px 0px;
      padding: 1.4375rem 0rem;
      -webkit-animation: slidingHighlightOnTop 1s 1 5s forwards;
      animation: slidingHighlightOnTop 1s 1 5s forwards; }
    .user_detail_widget .highlight.mobile {
      font-size: 16px;
      font-size: 1rem;
      margin: 0px 12px;
      margin: 0rem 0.75rem;
      overflow: hidden;
      background-color: transparent;
      -webkit-animation: slidingHighlightOnTopMobile 1s 1 5s forwards;
      animation: slidingHighlightOnTopMobile 1s 1 5s forwards;
      max-height: 500px; }
      .user_detail_widget .highlight.mobile .text {
        padding: 0;
        background-color: #49af57; }
        .user_detail_widget .highlight.mobile .text p {
          padding: 12px;
          padding: 0.75rem;
          margin-bottom: 0;
          color: #ffffff; }
    .user_detail_widget .highlight strong {
      font-family: 'senticosansdtregular', Arial, Verdana, sans-serif;
      font-weight: 300; }
  .user_detail_widget .btn-login-loggedin {
    z-index: 2;
    background-color: #ffffff;
    margin-bottom: -1px;
    padding: 0px 10px 1px 10px;
    padding: 0rem 0.625rem 0.0625rem 0.625rem;
    line-height: 36px;
    line-height: 2.25rem;
    height: auto;
    padding-bottom: 6px;
    cursor: pointer;
    border-radius: 2px;
    border-radius: 0.125rem;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    outline: 0;
    font-family: 'senticosansdtregular', Arial, Verdana, sans-serif;
    font-size: 16px;
    font-size: 1rem;
    border-width: 1px;
    border-style: solid;
    border-color: #e0e0e0;
    border-bottom-color: transparent;
    color: #49af57; }
    .user_detail_widget .btn-login-loggedin:after {
      font-family: 'aegon_icons';
      font-size: 12px;
      font-size: 0.75rem;
      content: "\e630";
      margin-left: 6px;
      margin-left: 0.375rem; }
    .user_detail_widget .btn-login-loggedin.tap {
      border-bottom-color: #e0e0e0;
      padding-bottom: 0; }
      .user_detail_widget .btn-login-loggedin.tap ~ .dropdown {
        display: none; }
    .user_detail_widget .btn-login-loggedin.off, .user_detail_widget .btn-login-loggedin.off:after {
      -webkit-animation: none;
      animation: none;
      background-color: #ffffff; }
    .user_detail_widget .btn-login-loggedin:hover {
      opacity: initial; }
  .user_detail_widget.processed .highlight.desktop {
    display: none; }
  .user_detail_widget.processed .highlight.mobile {
    display: none; }
  .user_detail_widget.processed > .text {
    opacity: 1; }
  .user_detail_widget.processed .btn-login-loggedin, .user_detail_widget.processed .btn-login-loggedin:after {
    -webkit-animation: none;
    animation: none; }

html.lt-ie9 .user_detail_widget > .text {
  opacity: 1 !important; }

body.section-mijnaegon .myaegon {
  display: none; }

body.shw-widgets-logged-in header.header .login-link-wrapper, body.shw-widgets-logged-in .link-logged-in a {
  display: none; }
body.shw-widgets-logged-in .user_detail_widget, body.shw-widgets-logged-in .link-logged-in .link-alternative a {
  display: block; }

.link-alternative a {
  display: none; }

@media only screen and (min-width: 641px) {
  .user_detail_widget > .text {
    line-height: 44px;
    line-height: 2.75rem; }
  .user_detail_widget .text p.name {
    display: inline;
    padding: 0px 25px 0px 0px;
    padding: 0rem 1.5625rem 0rem 0rem;
    color: #49af57; }
  .user_detail_widget .dropdown {
    display: none; }
    .user_detail_widget .dropdown .text p.name {
      display: none; }
  .user_detail_widget .highlight.desktop {
    display: block; }
    .user_detail_widget .highlight.desktop .text {
      margin: 0;
      text-align: left;
      line-height: 44px;
      line-height: 2.75rem;
      padding-right: 170px;
      padding-right: 10.625rem;
      margin-left: 7.3%;
      margin-right: 7.3%;
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden;
      color: #ffffff; }
      .user_detail_widget .highlight.desktop .text .welcome {
        font-family: 'senticosansdtregular', Arial, Verdana, sans-serif; }
      .user_detail_widget .highlight.desktop .text p {
        display: inline; }
  .user_detail_widget .highlight.mobile {
    display: none; }
  .user_detail_widget .btn-login-loggedin {
    display: inline-block;
    padding: 0px 13px 2px 13px;
    padding: 0rem 0.8125rem 0.125rem 0.8125rem;
    line-height: 36px;
    line-height: 2.25rem;
    font-size: inherit;
    border-bottom-color: #e0e0e0;
    -webkit-animation: buttonLoginToDefault 4s normal 0s forwards;
    animation: buttonLoginToDefault 4s normal 0s forwards; }
    .user_detail_widget .btn-login-loggedin:before {
      content: "\e636";
      font-family: 'aegon_icons';
      display: inline-block;
      font-size: 23px;
      font-size: 1.4375rem;
      margin-right: 12px;
      margin-right: 0.75rem;
      -webkit-transform: translateY(3px);
      -ms-transform: translateY(3px);
      transform: translateY(3px); }
    .user_detail_widget .btn-login-loggedin:after {
      display: inline-block;
      -webkit-animation: buttonAfterLoginToDefault 4s normal 0s forwards;
      animation: buttonAfterLoginToDefault 4s normal 0s forwards; }
    .user_detail_widget .btn-login-loggedin.tap {
      background-color: #ffffff;
      border-bottom-color: transparent;
      padding-bottom: 0px; }
      .user_detail_widget .btn-login-loggedin.tap ~ .dropdown {
        display: block; }
    .user_detail_widget .btn-login-loggedin.ieChangeColors {
      color: #ffffff; }
      .user_detail_widget .btn-login-loggedin.ieChangeColors:after {
        border-color: #ffffff; } }

@media only screen and (min-width: 901px) {
  .user_detail_widget > .text {
    float: left;
    display: inline-block;
    opacity: 1;
    transition: opacity .15s; } }

@-webkit-keyframes buttonLoginToDefault {
  0%, 75% {
    border-color: #ffffff;
    color: #ffffff; }

  100% {
    border-color: #e0e0e0;
    color: #49af57; } }

@keyframes buttonLoginToDefault {
  0%, 75% {
    border-color: #ffffff;
    color: #ffffff; }

  100% {
    border-color: #e0e0e0;
    color: #49af57; } }

@-webkit-keyframes buttonAfterLoginToDefault {
  0%, 75% {
    border-color: #ffffff; }

  100% {
    border-color: #49af57; } }

@keyframes buttonAfterLoginToDefault {
  0%, 75% {
    border-color: #ffffff; }

  100% {
    border-color: #49af57; } }

@-webkit-keyframes slidingHighlightOnTop {
  from {
    -webkit-transform: translateY(0%);
    transform: translateY(0%); }

  to {
    -webkit-transform: translateY(-120%);
    transform: translateY(-120%); } }

@keyframes slidingHighlightOnTop {
  from {
    -webkit-transform: translateY(0%);
    transform: translateY(0%); }

  to {
    -webkit-transform: translateY(-120%);
    transform: translateY(-120%); } }

@-webkit-keyframes slidingHighlightOnTopMobile {
  from {
    max-height: 500px; }

  to {
    max-height: 0px; } }

@keyframes slidingHighlightOnTopMobile {
  from {
    max-height: 500px; }

  to {
    max-height: 0px; } }

@font-face {
  font-family: 'senticosansdtlight';
  src: url('../fonts/senticosansdt-light-webfont.eot');
  src: url('../fonts/senticosansdt-light-webfont.eot?#iefix') format('embedded-opentype'), url('../fonts/senticosansdt-light-webfont.woff') format('woff'), url('../fonts/senticosansdt-light-webfont.ttf') format('truetype'), url('../fonts/senticosansdt-light-webfont.svg#senticosansdtlight') format('svg');
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'senticosansdtregular';
  src: url('../fonts/senticosansdt-regular-webfont.eot');
  src: url('../fonts/senticosansdt-regular-webfont.eot?#iefix') format('embedded-opentype'), url('../fonts/senticosansdt-regular-webfont.woff') format('woff'), url('../fonts/senticosansdt-regular-webfont.ttf') format('truetype'), url('../fonts/senticosansdt-regular-webfont.svg#senticosansdtregular') format('svg');
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'senticosansdtthin';
  src: url('../fonts/senticosansdt-thin-webfont.eot');
  src: url('../fonts/senticosansdt-thin-webfont.eot?#iefix') format('embedded-opentype'), url('../fonts/senticosansdt-thin-webfont.woff') format('woff'), url('../fonts/senticosansdt-thin-webfont.ttf') format('truetype');
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'senticosansdtmedium';
  src: url('../fonts/senticosansdt-medium-webfont.eot');
  src: url('../fonts/senticosansdt-medium-webfont.eot?#iefix') format('embedded-opentype'), url('../fonts/senticosansdt-medium-webfont.woff') format('woff'), url('../fonts/senticosansdt-medium-webfont.ttf') format('truetype');
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'aegon_icons';
  src: url('../fonts/aegon_icons.eot');
  src: url('../fonts/aegon_icons.eot?#iefix') format('embedded-opentype'), url('../fonts/aegon_icons.woff') format('woff'), url('../fonts/aegon_icons.ttf') format('truetype'), url('../fonts/aegon_icons.svg#aegon_icons') format('svg');
  font-weight: normal;
  font-style: normal; }

.lighter_grey {
  background-color: #EFEBE7; }

.white {
  background-color: #ffffff; }

.blue {
  background-color: #3395d3; }

button, div.button > a, .button {
  display: inline-block;
  cursor: pointer;
  height: auto;
  line-height: 38px;
  line-height: 2.375rem;
  padding: 0px 10px;
  padding: 0rem 0.625rem;
  border-radius: 3px;
  border-radius: 0.1875rem;
  font-size: 18px;
  font-size: 1.125rem;
  white-space: nowrap;
  border: 0;
  outline: 0;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  background-color: #3395d3;
  color: #ffffff; }
  button a, div.button > a a, .button a {
    color: inherit; }
  button:hover, div.button > a:hover, .button:hover {
    opacity: 0.8; }
  button:active, div.button > a:active, .button:active {
    opacity: inherit; }
  button.right, div.button > a.right, .button.right {
    margin-left: 10px; }
  button.left, div.button > a.left, .button.left {
    margin-right: 10px; }
  button.top, div.button > a.top, .button.top {
    margin-bottom: 10px; }
  button.bottom, div.button > a.bottom, .button.bottom {
    margin-top: 10px; }
  button.red, div.button > a.red, .button.red {
    background-color: #C50B1F; }
  button.green, div.button > a.green, .button.green {
    background-color: #49af57; }
  button.orange, div.button > a.orange, .button.orange {
    background-color: #f9a600; }
  button.arrow:after, div.button > a.arrow:after, .button.arrow:after {
    font-size: 11px;
    font-size: 0.6875rem;
    font-family: 'aegon_icons';
    content: "\e600";
    position: relative;
    margin-right: -10px;
    margin-left: 10px;
    background-color: #66b0de;
    display: inline-block;
    height: inherit;
    line-height: inherit;
    vertical-align: top;
    float: none;
    padding: 0px 14px;
    padding: 0rem 0.875rem;
    border-radius: 0px 3px 3px 0px;
    border-radius: 0rem 0.1875rem 0.1875rem 0rem; }
  button.arrow.blue:after, div.button > a.arrow.blue:after, .button.arrow.blue:after {
    margin-left: 0;
    background-color: #3395d3; }
  button.arrow.red:after, div.button > a.arrow.red:after, .button.arrow.red:after {
    margin-left: 0;
    background-color: #C50B1F; }
  button.arrow.green:after, div.button > a.arrow.green:after, .button.arrow.green:after {
    margin-left: 0;
    background-color: #49af57; }
  button.arrow.orange:after, div.button > a.arrow.orange:after, .button.arrow.orange:after {
    margin-left: 10px;
    background-color: #ffbe3d; }
  button.white, button.transparent, div.button > a.white, div.button > a.transparent, .button.white, .button.transparent {
    background-color: #ffffff;
    color: #3395d3; }
    button.white.arrow:before, button.transparent.arrow:before, div.button > a.white.arrow:before, div.button > a.transparent.arrow:before, .button.white.arrow:before, .button.transparent.arrow:before {
      font-size: 11px;
      font-size: 0.6875rem;
      font-size: 11px;
      font-family: 'aegon_icons';
      content: "\e600";
      padding: 11px;
      margin-left: -10px;
      background-color: inherit;
      color: #3395d3; }
    button.white:after, button.transparent:after, div.button > a.white:after, div.button > a.transparent:after, .button.white:after, .button.transparent:after {
      content: "";
      padding: 0;
      margin-right: 0;
      margin-left: 0;
      background-color: inherit; }
  button.transparent, div.button > a.transparent, .button.transparent {
    background-color: transparent; }
  button.edit, div.button > a.edit, .button.edit {
    display: block; }
    @media screen and (min-width: 641px) and (max-width: 16000px) {
      button.edit, div.button > a.edit, .button.edit {
        display: none; } }
    button.edit.transparent, div.button > a.edit.transparent, .button.edit.transparent {
      display: none; }
      @media screen and (min-width: 641px) and (max-width: 16000px) {
        button.edit.transparent, div.button > a.edit.transparent, .button.edit.transparent {
          float: right;
          display: block; }
          button.edit.transparent:after, div.button > a.edit.transparent:after, .button.edit.transparent:after {
            content: "\e610";
            font-family: 'aegon_icons'; } }
    button.edit:before, div.button > a.edit:before, .button.edit:before {
      content: "Wijzig  "; }
  button[class*="icon-"]:before, div.button > a[class*="icon-"]:before, .button[class*="icon-"]:before {
    font-size: 16px; }

.icon:before, [class*="icon-"]:before {
  font-family: 'aegon_icons';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  padding-right: 8px; }

.icon-uniE600:before {
  content: '\e600'; }

.icon-uniE601:before {
  content: '\e601'; }

.icon-uniE602:before {
  content: '\e602'; }

.icon-uniE603:before {
  content: '\e603'; }

.icon-uniE604:before, .icon-6860:before {
  content: '\e604'; }

.icon-uniE605:before, .icon-klantenservice:before, .icon-service-contact:before, .icon-service--contact:before, .icon-4532:before, .icon-5659:before {
  content: '\e605'; }

.icon-uniE606:before {
  content: '\e606'; }

.icon-uniE607:before, .icon-sparen:before, .icon-5074:before {
  content: '\e607'; }

.icon-uniE608:before, .icon-actueel:before, a.menu-5662:before, .icon-beleggen:before, .icon-4494:before {
  content: '\e608'; }

.icon-uniE609:before, .icon-verzekeren:before, .icon-4495:before {
  content: '\e609'; }

.icon-uniE610:before, .icon-inloggen:before, .icon-4610:before, .icon-5694:before {
  content: '\e610'; }

.icon-uniE611:before, .icon-uitgelicht:before, .icon-4547:before, .icon-5657:before {
  content: '\e611'; }

.icon-uniE629:before, .icon-4546:before {
  content: '\e629'; }

.icon-uniE60B:before, .icon-hypotheek:before, .icon-4496:before, .icon-4537:before {
  content: '\e60b'; }

.icon-uniE60A:before, .icon-pensioen:before, .icon-4497:before {
  content: '\e60a'; }

.icon-uniE60D:before {
  content: '\e60d'; }

.icon-uniE62B:before {
  content: '\e62b'; }

.icon-uniE636:before, .icon-user-link:before {
  content: '\e636'; }

.icon-uniE646:before, .icon-6861:before {
  content: '\e636'; }

.icon-uniE647:before, .icon-home:before, .icon-5653:before {
  content: '\e637'; }

.icon-uniE648:before, .icon-lock:before {
  content: '\e638'; }

.icon-uniE62C:before, .icon-6863:before {
  content: '\e62c'; }

.icon-pdf:before {
  content: '\e639'; }

.icon-mijn-aegon:before {
  content: "\e636"; }

.icon-mijn-gegevens:before {
  content: "\e62c"; }

.icon-mijn-documenten:before {
  content: "\e604"; }

.icon-mijn-producten:before {
  content: "\e629"; }


<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;base64, */
=======
/*# sourceMappingURL=data:application/json;base64, */
>>>>>>> 2f8649ac90e2f2154028a9beb223c1f10e0dc230
